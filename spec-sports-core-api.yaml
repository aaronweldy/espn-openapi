openapi: 3.0.3
info:
  title: ESPN Sports Core API
  version: 1.0.0
  description: Unofficial ESPN Sports Core API for retrieving detailed sports data from sports.core.api.espn.com. This API is not officially supported by ESPN and may change without notice.

servers:
  - url: https://sports.core.api.espn.com
    description: ESPN Sports Core API Production Server

paths:
  /v2/sports/football/leagues/nfl/athletes/{athleteId}:
    get:
      summary: Get NFL Athlete Details
      description: Retrieve detailed information for a specific NFL athlete
      operationId: getNFLAthleteDetails
      parameters:
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "3139477"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteDetailsResponse'
        '404':
          description: Athlete not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/athletes/{athleteId}/statistics:
    get:
      summary: Get NFL Athlete Statistics
      description: Retrieve detailed statistics for a specific NFL athlete
      operationId: getNFLAthleteStatistics
      parameters:
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "3139477"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteStatisticsResponse'
        '404':
          description: Athlete statistics not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/athletes/{athleteId}/statisticslog:
    get:
      summary: Get NFL Athlete Statistics Log
      description: Retrieve log of statistics for a specific NFL athlete across games/seasons
      operationId: getNFLAthleteStatisticsLog
      parameters:
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "3139477"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteStatisticsLogResponse'
        '404':
          description: Athlete statistics log not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/calendar:
    get:
      summary: Get League Calendar
      description: Retrieve the calendar for a given league and sport (e.g., NFL, NBA, etc). Returns a list of calendar resource references.
      operationId: getLeagueCalendar
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/venues:
    get:
      summary: Get League Venues
      description: Retrieve the list of venues for a given league and sport. Returns a paginated list of venue resource references.
      operationId: getLeagueVenues
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/franchises:
    get:
      summary: Get League Franchises
      description: Retrieve the list of franchises for a given league and sport. Returns a paginated list of franchise resource references.
      operationId: getLeagueFranchises
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons:
    get:
      summary: Get League Seasons
      description: Retrieve the list of seasons for a given league and sport. Returns a paginated list of season resource references.
      operationId: getLeagueSeasons
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasonType}/weeks:
    get:
      summary: Get League Season Weeks
      description: Retrieve the list of weeks for a given season and season type in a league and sport. Returns a paginated list of week resource references.
      operationId: getLeagueSeasonWeeks
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: seasonType
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason, 4=off-season)
          schema:
            type: integer
            enum: [1, 2, 3, 4]
            example: 2
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events:
    get:
      summary: Get League Events
      description: Retrieve the list of events for a given league and sport. Returns a paginated list of event resource references.
      operationId: getLeagueEvents
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: week
          in: query
          required: false
          description: Filter by week number
          schema:
            type: integer
            example: 1
        - name: season
          in: query
          required: false
          description: Filter by season year
          schema:
            type: integer
            example: 2024
        - name: seasontypes
          in: query
          required: false
          description: Filter by season type(s) (comma-separated)
          schema:
            type: string
            example: "2"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{eventId}:
    get:
      summary: Get League Event Details
      description: Retrieve detailed information for a specific event in a league and sport.
      operationId: getLeagueEventDetails
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: eventId
          in: path
          required: true
          description: The event ID
          schema:
            type: string
            example: "401772510"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/events/{eventId}/competitions/{competitionId}/drives:
    get:
      summary: Get Drives for a Competition
      description: Retrieve all drives for a given NFL event/competition.
      operationId: getNFLCompetitionDrives
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
        - name: competitionId
          in: path
          required: true
          schema:
            type: string
        - name: pageIndex
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivesListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/events/{eventId}/competitions/{competitionId}/plays:
    get:
      summary: Get Plays for a Competition
      description: Retrieve all plays for a given NFL event/competition.
      operationId: getNFLCompetitionPlays
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
        - name: competitionId
          in: path
          required: true
          schema:
            type: string
        - name: pageIndex
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaysListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/leaders:
    get:
      summary: Get NFL League Leaders
      description: Retrieve league leaders for various statistical categories in the NFL.
      operationId: getNFLLeaders
      parameters:
        - name: limit
          in: query
          required: false
          description: Maximum number of leader entries to return per category
          schema:
            type: integer
            example: 10
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflLeadersResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/types/{seasontype}/leaders:
    get:
      summary: Get NFL Leaders for a Season and Type
      description: Retrieve league leaders for various statistical categories in the NFL for a specific season and season type (e.g., regular, postseason).
      operationId: getNFLSeasonTypeLeaders
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: seasontype
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason)
          schema:
            type: integer
            example: 2
        - name: limit
          in: query
          required: false
          description: Maximum number of leader entries to return per category
          schema:
            type: integer
            example: 10
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflLeadersResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/teams/{team_id}:
    get:
      summary: Get NFL Team Details for a Season
      description: Retrieve detailed information for a specific NFL team in a given season (core API).
      operationId: getNflSeasonTeam
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: team_id
          in: path
          required: true
          description: The team ID (e.g., 12)
          schema:
            type: string
            example: "12"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreNflSeasonTeamResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/teams/{team_id}/injuries:
    get:
      summary: Get NFL Team Injuries
      description: Retrieve a paginated list of injury references for a specific NFL team.
      operationId: getNflTeamInjuries
      parameters:
        - name: team_id
          in: path
          required: true
          description: The team ID (e.g., 12)
          schema:
            type: string
            example: "12"
        - name: pageIndex
          in: query
          required: false
          description: Page index for pagination
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          required: false
          description: Page size for pagination
          schema:
            type: integer
            example: 25
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/draft:
    get:
      summary: Get NFL Draft for a Season
      description: Retrieve NFL Draft data for a specific season, including rounds, athletes, positions, and team needs.
      operationId: getNflDraft
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflDraftResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/teams/{team_id}/depthcharts:
    get:
      summary: Get NFL Team Depth Chart
      description: Retrieve the depth chart for a specific NFL team in a given season (core API).
      operationId: getNflTeamDepthchart
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: team_id
          in: path
          required: true
          description: The team ID (e.g., 2)
          schema:
            type: string
            example: "2"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflTeamDepthchartResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/athletes/{athlete_id}/eventlog:
    get:
      summary: Get NFL Athlete Event Log
      description: Retrieve the event log for a specific NFL athlete in a given season (core API).
      operationId: getNflAthleteEventlog
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: athlete_id
          in: path
          required: true
          description: The athlete ID (e.g., 3139477)
          schema:
            type: string
            example: "3139477"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflAthleteEventlogResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/draft/rounds:
    get:
      summary: Get NFL Draft Rounds
      description: Retrieve all rounds and picks for the NFL draft for a given season (core API).
      operationId: getNflDraftRounds
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflDraftRoundsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/draft/athletes/{athlete_id}:
    get:
      summary: Get NFL Draft Athlete Details
      description: Retrieve details for a specific NFL draft athlete (core API).
      operationId: getNflDraftAthlete
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: athlete_id
          in: path
          required: true
          description: The draft athlete ID (e.g., 106308)
          schema:
            type: string
            example: "106308"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflDraftAthleteResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/types/{seasontype}/groups/{group_id}/standings:
    get:
      summary: Get NFL Conference Standings
      description: Retrieve NFL conference standings for a given year, season type, and group (e.g., NFC or AFC).
      operationId: getNFLConferenceStandings
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: seasontype
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason, 4=off-season)
          schema:
            type: integer
            enum: [1, 2, 3, 4]
            example: 2
        - name: group_id
          in: path
          required: true
          description: The group ID (e.g., 7 for NFC, 8 for AFC)
          schema:
            type: integer
            example: 7
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflConferenceStandingsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}:
    get:
      summary: Get Competition Detail
      description: Retrieve detailed information for a specific competition within an event for a given sport and league.
      operationId: getCompetitionDetail
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionDetail'
        '404':
          description: Competition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/situation:
    get:
      summary: Get Competition Situation
      description: Retrieve the current situation (down, distance, yard line, timeouts, etc) for a specific competition (game).
      operationId: getCompetitionSituation
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
            example: '401220403'
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
            example: '401220403'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionSituationResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/status:
    get:
      summary: Get Competition Status
      description: Retrieve the current status (clock, period, state, etc) for a specific competition (game).
      operationId: getCompetitionStatus
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionStatus'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/odds:
    get:
      summary: Get Competition Odds
      description: Retrieve betting odds for a specific competition within an event for a given sport and league.
      operationId: getCompetitionOdds
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OddsResponse'
        '404':
          description: Odds not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/broadcasts:
    get:
      summary: Get Competition Broadcasts
      description: Retrieve broadcast information for a specific competition within an event for a given sport and league.
      operationId: getCompetitionBroadcasts
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionBroadcastsResponse'
        '404':
          description: Broadcasts not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/officials:
    get:
      summary: Get Competition Officials
      description: Retrieve officials for a specific competition within an event for a given sport and league.
      operationId: getCompetitionOfficials
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionOfficialsResponse'
        '404':
          description: Officials not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/leaders:
    get:
      summary: Get Competition Leaders
      description: Retrieve statistical leaders for a specific competition within an event for a given sport and league.
      operationId: getCompetitionLeaders
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionLeadersResponse'
        '404':
          description: Leaders not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/competitors/{competitor_id}/roster/{athlete_id}/statistics/{page}:
    get:
      summary: Get Competition Athlete Statistics
      description: Retrieve detailed statistics for a specific athlete in a competition (game) for a given sport and league.
      operationId: getCompetitionAthleteStatistics
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
        - name: competitor_id
          in: path
          required: true
          description: The competitor ID (team ID within the competition)
          schema:
            type: string
        - name: athlete_id
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
        - name: page
          in: path
          required: true
          description: The statistics page number (usually 0)
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionAthleteStatisticsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/baseball/leagues/mlb/athletes/{athleteId}:
    get:
      summary: Get MLB Athlete Details
      description: Retrieve detailed information for a specific MLB athlete
      operationId: getMLBAthleteDetails
      parameters:
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "33192"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlbAthleteDetailsResponse'
        '404':
          description: Athlete not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/positions:
    get:
      summary: List Player Positions
      description: Retrieve a paginated list of player positions for a given sport and league.
      operationId: getPositionsList
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport (e.g., football, baseball)
          schema:
            type: string
        - name: league
          in: path
          required: true
          description: The league (e.g., nfl, mlb)
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maximum number of positions to return
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/transactions:
    get:
      summary: Get League Transactions
      description: Retrieve the list of transactions for a given league and sport. Returns a paginated list of transaction objects (empty array if none).
      operationId: getLeagueTransactions
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return
          schema:
            type: integer
            example: 25
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    AthleteDetailsResponse:
      type: object
      properties:
        id:
          type: string
          example: "3139477"
        uid:
          type: string
          example: "s:20~l:28~a:3139477"
        guid:
          type: string
          example: "37d87523-280a-9d4a-0adb-22cfc6d3619c"
        type:
          type: string
          example: "football"
        alternateIds:
          type: object
          properties:
            sdr:
              type: string
              example: "3139477"
        firstName:
          type: string
          example: "Patrick"
        lastName:
          type: string
          example: "Mahomes"
        fullName:
          type: string
          example: "Patrick Mahomes"
        displayName:
          type: string
          example: "Patrick Mahomes"
        shortName:
          type: string
          example: "P. Mahomes"
        weight:
          type: number
          format: float
          example: 225.0
        displayWeight:
          type: string
          example: "225 lbs"
        height:
          type: number
          format: float
          example: 74.0
        displayHeight:
          type: string
          example: "6' 2\""
        age:
          type: integer
          example: 29
        dateOfBirth:
          type: string
          format: date-time
          example: "1995-09-17T07:00Z"
        debutYear:
          type: integer
          example: 2017
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        jersey:
          type: string
          example: "15"
        position:
          $ref: '#/components/schemas/Position'
        team:
          oneOf:
            - $ref: '#/components/schemas/Team'
            - $ref: '#/components/schemas/Reference'
        active:
          type: boolean
          example: true
        status:
          $ref: '#/components/schemas/AthleteStatus'
        experience:
          type: object
          properties:
            years:
              type: integer
              example: 7
            displayValue:
              type: string
              example: "7 years"
      required:
        - id
        - uid
        - fullName

    AthleteStatisticsResponse:
      type: object
      properties:
        athlete:
          $ref: '#/components/schemas/AthleteReference'
        season:
          $ref: '#/components/schemas/Season'
          nullable: true
        splits:
          type: object
          properties:
            id:
              type: string
              example: "0"
            name:
              type: string
              example: "All Splits"
            abbreviation:
              type: string
              example: "Any"
            categories:
              type: array
              items:
                $ref: '#/components/schemas/StatisticCategory'
      required:
        - athlete
        - splits

    AthleteStatisticsLogResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/athletes/3139477/statisticslog?lang=en&region=us"
        athlete:
          $ref: '#/components/schemas/AthleteReference'
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsLogEntry'
      required:
        - entries

    AthleteReference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/athletes/3139477?lang=en&region=us"
      required:
        - $ref

    StatisticCategory:
      type: object
      properties:
        name:
          type: string
          example: "passing"
        displayName:
          type: string
          example: "Passing"
        shortDisplayName:
          type: string
          example: "Passing"
        abbreviation:
          type: string
          example: "PASS"
        summary:
          type: string
          example: ""
        stats:
          type: array
          items:
            $ref: '#/components/schemas/Statistic'
      required:
        - name
        - displayName
        - stats

    Statistic:
      type: object
      properties:
        name:
          type: string
          example: "completions"
        displayName:
          type: string
          example: "Completions"
        shortDisplayName:
          type: string
          example: "COMP"
        description:
          type: string
          example: "The number of passes completed"
        abbreviation:
          type: string
          example: "COMP"
        value:
          type: number
          example: 401.0
        displayValue:
          type: string
          example: "401"
      required:
        - name
        - value

    StatisticsLogEntry:
      type: object
      properties:
        season:
          $ref: '#/components/schemas/Reference'
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsTypeEntry'
      required:
        - season
        - statistics
        
    StatisticsTypeEntry:
      type: object
      properties:
        type:
          type: string
          example: "total"
        team:
          oneOf:
            - $ref: '#/components/schemas/Team'
            - $ref: '#/components/schemas/Reference'
          nullable: true
        statistics:
          $ref: '#/components/schemas/StatisticsReference'
      required:
        - type
        - statistics
        
    StatisticsReference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/seasons/2024/types/2/athletes/3139477/statistics/0?lang=en&region=us"
      required:
        - $ref

    EventReference:
      type: object
      properties:
        id:
          type: string
          example: "401547417"
        date:
          type: string
          format: date-time
          example: "2023-02-12T23:30:00Z"
        homeTeam:
          $ref: '#/components/schemas/TeamReference'
        awayTeam:
          $ref: '#/components/schemas/TeamReference'

    Season:
      type: object
      properties:
        year:
          type: integer
          example: 2023
        type:
          type: integer
          example: 2
          description: "Season type (1=preseason, 2=regular, 3=postseason)"
        slug:
          type: string
          example: "regular-season"
      required:
        - year
        - type

    Position:
      type: object
      properties:
        id:
          type: string
          example: "8"
        name:
          type: string
          example: "Quarterback"
        displayName:
          type: string
          example: "Quarterback"
        abbreviation:
          type: string
          example: "QB"
        leaf:
          type: boolean
          example: true
      required:
        - id
        - name
        - abbreviation

    Team:
      type: object
      properties:
        id:
          type: string
          example: "12"
        uid:
          type: string
          example: "s:20~l:28~t:12"
        location:
          type: string
          example: "Kansas City"
        name:
          type: string
          example: "Chiefs"
        abbreviation:
          type: string
          example: "KC"
        displayName:
          type: string
          example: "Kansas City Chiefs"
        shortDisplayName:
          type: string
          example: "Chiefs"
        color:
          type: string
          example: "e31837"
        alternateColor:
          type: string
          example: "ffb612"
        logo:
          type: string
          format: uri
          example: "https://a.espncdn.com/i/teamlogos/nfl/500/kc.png"
      required:
        - id
        - displayName

    TeamReference:
      type: object
      properties:
        id:
          type: string
          example: "12"
        abbreviation:
          type: string
          example: "KC"
        displayName:
          type: string
          example: "Kansas City Chiefs"
      required:
        - id
        - displayName

    AthleteStatus:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "Active"
        type:
          type: string
          example: "active"
        abbreviation:
          type: string
          example: "ACT"
      required:
        - id
        - name

    Link:
      type: object
      properties:
        href:
          type: string
          format: uri
        text:
          type: string
          example: "Standings"
        rel:
          type: array
          items:
            type: string
            example: "standings"
      required:
        - href
        - rel

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string

    Reference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    CalendarListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 4
        pageIndex:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 25
        pageCount:
          type: integer
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    PaginatedReferenceListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 18
        pageIndex:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 25
        pageCount:
          type: integer
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    EventDetail:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        uid:
          type: string
        date:
          type: string
          format: date-time
        name:
          type: string
        shortName:
          type: string
        season:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        seasonType:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        week:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        timeValid:
          type: boolean
        competitions:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Reference'
              - type: object
                properties:
                  $ref:
                    type: string
                    format: uri
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        venues:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Reference'
              - type: object
                properties:
                  $ref:
                    type: string
                    format: uri
        league:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
      required:
        - id
        - date
        - competitions
        - venue
        - type
        - status
        - links

    DrivesListResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Drive'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    PlaysListResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Play'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    Drive:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        description:
          type: string
        sequenceNumber:
          type: string
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Team'
        endTeam:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Team'
        start:
          $ref: '#/components/schemas/DriveFieldPosition'
        end:
          $ref: '#/components/schemas/DriveFieldPosition'
        timeElapsed:
          $ref: '#/components/schemas/DriveTimeElapsed'
        yards:
          type: integer
        isScore:
          type: boolean
        offensivePlays:
          type: integer
        result:
          type: string
        shortDisplayResult:
          type: string
        displayResult:
          type: string
        source:
          $ref: '#/components/schemas/DriveSource'
        plays:
          $ref: '#/components/schemas/PlaysListResponse'

    DriveFieldPosition:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/DrivePeriod'
        clock:
          $ref: '#/components/schemas/DriveClock'
        yardLine:
          type: integer
        text:
          type: string

    DrivePeriod:
      type: object
      properties:
        type:
          type: string
        number:
          type: integer

    DriveClock:
      type: object
      properties:
        value:
          type: number
        displayValue:
          type: string

    DriveTimeElapsed:
      type: object
      properties:
        value:
          type: number
        displayValue:
          type: string

    DriveSource:
      type: object
      properties:
        id:
          type: string
        description:
          type: string

    Play:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        sequenceNumber:
          type: string
        type:
          $ref: '#/components/schemas/PlayType'
        text:
          type: string
        shortText:
          type: string
        alternativeText:
          type: string
        shortAlternativeText:
          type: string
        awayScore:
          type: integer
        homeScore:
          type: integer
        period:
          $ref: '#/components/schemas/PlayPeriod'
        clock:
          $ref: '#/components/schemas/PlayClock'
        scoringPlay:
          type: boolean
        priority:
          type: boolean
        scoreValue:
          type: integer
        modified:
          type: string
          format: date-time
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Team'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/PlayParticipant'
        probability:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        wallclock:
          type: string
          format: date-time
        drive:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Drive'
        start:
          $ref: '#/components/schemas/PlayFieldPosition'
        end:
          $ref: '#/components/schemas/PlayFieldPosition'
        statYardage:
          type: integer

    PlayType:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        abbreviation:
          type: string

    PlayPeriod:
      type: object
      properties:
        number:
          type: integer

    PlayClock:
      type: object
      properties:
        value:
          type: number
        displayValue:
          type: string

    PlayFieldPosition:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/PlayPeriod'
        clock:
          $ref: '#/components/schemas/PlayClock'
        yardLine:
          type: integer
        text:
          type: string

    PlayParticipant:
      type: object
      properties:
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        position:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        statistics:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        stats:
          type: array
          items:
            $ref: '#/components/schemas/PlayStat'
        order:
          type: integer
        type:
          type: string

    PlayStat:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        shortDisplayName:
          type: string
        description:
          type: string
        abbreviation:
          type: string
        value:
          type: number
        displayValue:
          type: string

    NflLeadersResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/leaders/0?lang=en&region=us"
        id:
          type: string
          example: "0"
        name:
          type: string
          example: "TOTAL"
        abbreviation:
          type: string
          example: "Any"
        type:
          type: string
          example: "total"
        categories:
          type: array
          items:
            $ref: '#/components/schemas/NflLeadersCategory'
      required:
        - $ref
        - id
        - name
        - abbreviation
        - type
        - categories

    NflLeadersCategory:
      type: object
      properties:
        name:
          type: string
          example: "totalPoints"
        displayName:
          type: string
          example: "Total Points"
        shortDisplayName:
          type: string
          example: "TP"
        abbreviation:
          type: string
          example: "TP"
        leaders:
          type: array
          items:
            $ref: '#/components/schemas/NflLeader'
      required:
        - name
        - displayName
        - shortDisplayName
        - abbreviation
        - leaders

    NflLeader:
      type: object
      properties:
        displayValue:
          type: string
          example: "2673"
        value:
          type: number
          example: 2673.0
        rel:
          type: array
          items:
            type: string
            example: "athlete"
        athlete:
          $ref: '#/components/schemas/Reference'
        statistics:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
      required:
        - displayValue
        - value
        - rel
        - athlete
        - statistics

    CoreNflSeasonTeamResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        guid:
          type: string
        uid:
          type: string
        alternateIds:
          $ref: '#/components/schemas/AlternateIDS'
        slug:
          type: string
        location:
          type: string
        name:
          type: string
        nickname:
          type: string
        abbreviation:
          type: string
        displayName:
          type: string
        shortDisplayName:
          type: string
        color:
          type: string
        alternateColor:
          type: string
        isActive:
          type: boolean
        isAllStar:
          type: boolean
        logos:
          type: array
          items:
            $ref: '#/components/schemas/Logo'
        record:
          $ref: '#/components/schemas/Reference'
          nullable: true
        oddsRecords:
          $ref: '#/components/schemas/Reference'
          nullable: true
        athletes:
          $ref: '#/components/schemas/Reference'
          nullable: true
        venue:
          $ref: '#/components/schemas/Venue'
          nullable: true
        groups:
          $ref: '#/components/schemas/Reference'
          nullable: true
        ranks:
          $ref: '#/components/schemas/Reference'
          nullable: true
        statistics:
          $ref: '#/components/schemas/Reference'
          nullable: true
        leaders:
          $ref: '#/components/schemas/Reference'
          nullable: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        injuries:
          $ref: '#/components/schemas/Reference'
          nullable: true
        notes:
          $ref: '#/components/schemas/Reference'
          nullable: true
        againstTheSpreadRecords:
          $ref: '#/components/schemas/Reference'
          nullable: true
        franchise:
          $ref: '#/components/schemas/Reference'
          nullable: true
        projection:
          $ref: '#/components/schemas/Reference'
          nullable: true
        events:
          $ref: '#/components/schemas/Reference'
          nullable: true
        transactions:
          $ref: '#/components/schemas/Reference'
          nullable: true
        coaches:
          $ref: '#/components/schemas/Reference'
          nullable: true
        attendance:
          $ref: '#/components/schemas/Reference'
          nullable: true
      required:
        - $ref
        - id
        - guid
        - uid
        - alternateIds
        - slug
        - location
        - name
        - nickname
        - abbreviation
        - displayName
        - shortDisplayName
        - color
        - alternateColor
        - isActive
        - isAllStar
        - logos
        - links

    AlternateIDS:
      type: object
      properties:
        sdr:
          type: string
      required:
        - sdr

    Venue:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        fullName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        grass:
          type: boolean
        indoor:
          type: boolean
        images:
          type: array
          items:
            $ref: '#/components/schemas/Logo'
      required:
        - $ref
        - id
        - fullName
        - address
        - grass
        - indoor
        - images

    Address:
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
      required:
        - city
        - state
        - zipCode
        - country

    Logo:
      type: object
      properties:
        href:
          type: string
          format: uri
        width:
          type: integer
        height:
          type: integer
        alt:
          type: string
        rel:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date-time
      required:
        - href
        - width
        - height
        - alt
        - rel

    NflAthleteInjury:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        longComment:
          type: string
        shortComment:
          type: string
        status:
          type: string
        date:
          type: string
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        source:
          type: object
          properties:
            id:
              type: string
            description:
              type: string
            state:
              type: string
          required:
            - id
            - description
            - state
        type:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            abbreviation:
              type: string
          required:
            - id
            - name
            - description
            - abbreviation
      required:
        - $ref
        - id
        - longComment
        - shortComment
        - status
        - date
        - athlete
        - team
        - source
        - type
      description: Detailed NFL athlete injury object 

    NflDraftResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        uid:
          type: string
        year:
          type: integer
        numberOfRounds:
          type: integer
        displayName:
          type: string
        shortDisplayName:
          type: string
        status:
          $ref: '#/components/schemas/NflDraftRound'
        athletes:
          $ref: '#/components/schemas/NflDraftRound'
        rounds:
          $ref: '#/components/schemas/NflDraftRound'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftPosition'
        needs:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftTeamNeed'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      required:
        - $ref
        - uid
        - year
        - numberOfRounds
        - displayName
        - shortDisplayName
        - status
        - athletes
        - rounds
        - positions
        - needs
        - links

    NflDraftRound:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    NflDraftTeam:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    NflDraftAthleteResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        guid:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        shortName:
          type: string
        weight:
          type: number
        displayWeight:
          type: string
        height:
          type: number
        displayHeight:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        college:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        position:
          $ref: '#/components/schemas/Position'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftAthleteAttribute'
        analysis:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftAthleteAnalysis'
        pick:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        logo:
          $ref: '#/components/schemas/Logo'
      required:
        - $ref
        - id
        - guid
        - firstName
        - lastName
        - fullName
        - displayName
        - shortName
        - weight
        - displayWeight
        - height
        - displayHeight
        - links
        - college
        - position
        - positions
        - team
        - attributes
        - analysis
        - pick
        - athlete
        - logo

    NflDraftAthleteAttribute:
      type: object
      properties:
        type:
          type: integer
        name:
          type: string
        displayName:
          type: string
        abbreviation:
          type: string
        value:
          type: number
        displayValue:
          type: string
      required:
        - type
        - name
        - displayName
        - abbreviation
        - value
        - displayValue

    NflDraftAthleteAnalysis:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        text:
          type: string
        grade:
          type: integer
      required:
        - id
        - type

    NflDraftRoundsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftRoundDetail'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    NflDraftRoundDetail:
      type: object
      properties:
        number:
          type: integer
        displayName:
          type: string
        shortDisplayName:
          type: string
        picks:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftPick'
        status:
          $ref: '#/components/schemas/NflDraftRoundStatus'
      required:
        - number
        - displayName
        - shortDisplayName
        - picks
        - status

    NflDraftPick:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/NflDraftPickStatus'
        pick:
          type: integer
        overall:
          type: integer
        round:
          type: integer
        traded:
          type: boolean
        tradeNote:
          type: string
          nullable: true
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
          description: Reference to the athlete object
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
          description: Reference to the team object
      required:
        - status
        - pick
        - overall
        - round
        - traded
        - athlete
        - team

    NflDraftPickStatus:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        state:
          type: string
          nullable: true
      required:
        - id
        - name
        - description

    NflDraftRoundStatus:
      type: object
      properties:
        round:
          type: integer
        type:
          $ref: '#/components/schemas/NflDraftPickStatus'
      required:
        - round
        - type

    NflDraftPosition:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        abbreviation:
          type: string
        leaf:
          type: boolean
        parent:
          oneOf:
            - $ref: '#/components/schemas/Reference'
      required:
        - $ref
        - id
        - name
        - displayName
        - abbreviation
        - leaf
        - parent 

    NflTeamDepthchartResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/NflTeamDepthchartGroup'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items 

    NflTeamDepthchartGroup:
      type: object
      properties:
        name:
          type: string
        positions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NflTeamDepthchartPosition'
      required:
        - name
        - positions 

    NflTeamDepthchartPosition:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/Position'
        athletes:
          type: array
          items:
            $ref: '#/components/schemas/NflTeamDepthchartAthlete'
      required:
        - position
        - athletes 

    NflTeamDepthchartAthlete:
      type: object
      properties:
        rank:
          type: integer
        slot:
          type: integer
        athlete:
          $ref: '#/components/schemas/Reference'
      required:
        - rank
        - slot
        - athlete 

    NflDraftTeamNeed:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/Reference'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - team
        - positions

    NflAthleteEventlogResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        teams:
          type: object
          additionalProperties:
            type: object
            properties:
              team:
                oneOf:
                  - $ref: '#/components/schemas/Reference'
              id:
                type: string
            required:
              - id
              - team
        events:
          type: object
          properties:
            count:
              type: integer
            pageIndex:
              type: integer
            pageSize:
              type: integer
            pageCount:
              type: integer
            items:
              type: array
              items:
                type: object
                properties:
                  event:
                    oneOf:
                      - $ref: '#/components/schemas/Reference'
                  competition:
                    oneOf:
                      - $ref: '#/components/schemas/Reference'
                  statistics:
                    oneOf:
                      - $ref: '#/components/schemas/Reference'
                  teamId:
                    type: string
                  played:
                    type: boolean
                required:
                  - event
                  - competition
                  - teamId
                  - played
          required:
            - count
            - pageIndex
            - pageSize
            - pageCount
            - items
      required:
        - $ref
        - teams
        - events
      description: NFL athlete event log response object. 

    NflConferenceStandingsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/NflConferenceStandingsItem'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items
      description: NFL Conference Standings response object.

    NflConferenceStandingsItem:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      required:
        - $ref
        - id
        - name
        - displayName
        - links
      description: Item in NFL Conference Standings response. 

    SportEnum:
      type: string
      description: Common sport identifiers used in ESPN APIs.
      enum:
        - football
        - basketball
        - baseball
        - hockey
        - soccer
        - golf
        - racing
        - tennis
    LeagueEnum:
      type: string
      description: Common league identifiers used in ESPN APIs.
      enum:
        - nfl
        - mlb
        - nba
        - nhl
        - wnba
        - mens-college-basketball
        - womens-college-basketball
        - college-football
        - college-baseball
        - pga
        - lpga
        - f1
        - nascar-premier
        - atp
        - wta
        - mls
        - epl
        - laliga
        - bundesliga
        - serie-a
        - ligue-1
        - ucl
        - europa-league
        - other
        - uefa.champions
        - uefa.europa
        - uefa.europa.conf
        - esp.copa_del_rey
        - eng.fa
        - eng.1
        - esp.1
        - ger.1
        - ger.dfb_pokal
        - usa.1
        - concacaf.champions
        - usa.nwsl.cup
        - usa.nwsl
        - mex.1
        - eng.2
        - ita.coppa_italia
        - eng.w.1
        - por.1

    CompetitionDetail:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        guid:
          type: string
        uid:
          type: string
        date:
          type: string
        attendance:
          type: integer
        type:
          $ref: '#/components/schemas/CompetitionType'
        timeValid:
          type: boolean
        dateValid:
          type: boolean
        neutralSite:
          type: boolean
        divisionCompetition:
          type: boolean
        conferenceCompetition:
          type: boolean
        previewAvailable:
          type: boolean
        recapAvailable:
          type: boolean
        boxscoreAvailable:
          type: boolean
        lineupAvailable:
          type: boolean
        gamecastAvailable:
          type: boolean
        playByPlayAvailable:
          type: boolean
        conversationAvailable:
          type: boolean
        commentaryAvailable:
          type: boolean
        pickcenterAvailable:
          type: boolean
        summaryAvailable:
          type: boolean
        liveAvailable:
          type: boolean
        ticketsAvailable:
          type: boolean
        shotChartAvailable:
          type: boolean
        timeoutsAvailable:
          type: boolean
        possessionArrowAvailable:
          type: boolean
        onWatchESPN:
          type: boolean
        recent:
          type: boolean
        bracketAvailable:
          type: boolean
        wallclockAvailable:
          type: boolean
        highlightsAvailable:
          type: boolean
        gameSource:
          $ref: '#/components/schemas/CompetitionSource'
        boxscoreSource:
          $ref: '#/components/schemas/CompetitionSource'
        playByPlaySource:
          $ref: '#/components/schemas/CompetitionSource'
        linescoreSource:
          $ref: '#/components/schemas/CompetitionSource'
        statsSource:
          $ref: '#/components/schemas/CompetitionSource'
        venue:
          oneOf:
            - $ref: '#/components/schemas/Venue'
            - $ref: '#/components/schemas/Reference'
        competitors:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/CompetitionCompetitor'
              - $ref: '#/components/schemas/Reference'
        notes:
          type: array
          items:
            type: object
        situation:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        status:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        odds:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        broadcasts:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        officials:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        details:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        leaders:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        predictor:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        probabilities:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        powerIndexes:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        format:
          $ref: '#/components/schemas/CompetitionFormat'
        drives:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        hasDefensiveStats:
          type: boolean
      required:
        - $ref
        - id
        - date
        - competitors
        - venue
        - type
        - status
        - links

    CompetitionType:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        abbreviation:
          type: string
        slug:
          type: string
        type:
          type: string
      required:
        - id
        - text
        - abbreviation
        - slug
        - type

    CompetitionSource:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        state:
          type: string
      required:
        - id
        - description
        - state

    CompetitionFormat:
      type: object
      properties:
        regulation:
          $ref: '#/components/schemas/CompetitionOvertime'
        overtime:
          $ref: '#/components/schemas/CompetitionOvertime'
      required:
        - regulation
        - overtime

    CompetitionOvertime:
      type: object
      properties:
        periods:
          type: integer
        displayName:
          type: string
        slug:
          type: string
        clock:
          type: integer
      required:
        - periods
        - displayName
        - slug
        - clock

    CompetitionBroadcast:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    CompetitionCompetitor:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        uid:
          type: string
        type:
          type: string
        order:
          type: integer
        homeAway:
          type: string
        winner:
          type: boolean
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        score:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        linescores:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        roster:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        statistics:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        leaders:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        record:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
      required:
        - $ref
        - id
        - uid
        - type
        - order
        - homeAway
        - winner
        - team
        - score
        - linescores
        - roster
        - statistics
        - leaders
        - record

    CompetitionSituationResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        lastPlay:
          $ref: '#/components/schemas/LastPlayReference'
        down:
          type: integer
        yardLine:
          type: integer
        distance:
          type: integer
        isRedZone:
          type: boolean
        homeTimeouts:
          type: integer
        awayTimeouts:
          type: integer
      required:
        - $ref
        - lastPlay
        - down
        - yardLine
        - distance
        - isRedZone
        - homeTimeouts
        - awayTimeouts

    LastPlayReference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    CompetitionStatus:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        clock:
          type: number
        displayClock:
          type: string
        period:
          type: integer
        type:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            state:
              type: string
            completed:
              type: boolean
            description:
              type: string
            detail:
              type: string
            shortDetail:
              type: string
          required:
            - id
            - name
            - state
            - completed
            - description
            - detail
            - shortDetail
      required:
        - $ref
        - clock
        - displayClock
        - period
        - type
      description: Competition status object (clock, period, state, etc) for a specific competition (game).

    OddsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/OddsItem'
      required:
        - count
        - items
        - pageCount
        - pageIndex
        - pageSize

    OddsItem:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        provider:
          $ref: '#/components/schemas/OddsProvider'
        bettingOdds:
          $ref: '#/components/schemas/BettingOdds'
        moneylineWinner:
          type: boolean
        spreadWinner:
          type: boolean
        details:
          type: string
        overUnder:
          type: number
        spread:
          type: number
        overOdds:
          type: number
        underOdds:
          type: number
        awayTeamOdds:
          $ref: '#/components/schemas/TeamOdds'
        homeTeamOdds:
          $ref: '#/components/schemas/TeamOdds'
        current:
          $ref: '#/components/schemas/OddsItemCurrent'
        headToHeads:
          $ref: '#/components/schemas/HeadToHeads'
        predictors:
          $ref: '#/components/schemas/HeadToHeads'
        moneyLineHistory:
          $ref: '#/components/schemas/HeadToHeads'
        spreadHistory:
          $ref: '#/components/schemas/HeadToHeads'
        totalHistory:
          $ref: '#/components/schemas/HeadToHeads'
      required:
        - $ref
        - moneylineWinner
        - provider
        - spreadWinner

    OddsProvider:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        priority:
          type: integer
      required:
        - $ref
        - id
        - name
        - priority

    BettingOdds:
      type: object
      properties:
        homeTeam:
          $ref: '#/components/schemas/Reference'
        awayTeam:
          $ref: '#/components/schemas/Reference'
        teamOdds:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OddsDetail'
        preMatchMoneyLineAway:
          $ref: '#/components/schemas/OddsDetail'
        preMatchMoneyLineHome:
          $ref: '#/components/schemas/OddsDetail'
        preMatchSpreadHandicapAway:
          $ref: '#/components/schemas/OddsDetail'
        preMatchSpreadHome:
          $ref: '#/components/schemas/OddsDetail'
      required:
        - homeTeam
        - awayTeam
        - teamOdds

    OddsDetail:
      type: object
      properties:
        oddId:
          type: string
        value:
          type: string
        betSlipUrl:
          type: string
      required:
        - oddId
        - value
        - betSlipUrl

    TeamOdds:
      type: object
      properties:
        favorite:
          type: boolean
        underdog:
          type: boolean
        moneyLine:
          type: integer
        spreadOdds:
          type: number
        current:
          $ref: '#/components/schemas/OddsTeamCurrent'
        team:
          $ref: '#/components/schemas/HeadToHeads'
        winPercentage:
          type: number
        averageScore:
          type: number
        moneyLineOdds:
          type: number
        moneyLineReturn:
          type: number
        similarities:
          $ref: '#/components/schemas/HeadToHeads'
        spreadReturn:
          type: number
        spreadRecord:
          $ref: '#/components/schemas/SpreadRecord'
        pastPerformances:
          $ref: '#/components/schemas/HeadToHeads'
      required:
        - current
        - favorite
        - team
        - underdog

    OddsTeamCurrent:
      type: object
      properties:
        pointSpread:
          $ref: '#/components/schemas/OddsValue'
        spread:
          $ref: '#/components/schemas/OddsValue'
        moneyLine:
          $ref: '#/components/schemas/OddsValue'

    OddsValue:
      type: object
      properties:
        alternateDisplayValue:
          type: string
        american:
          type: string
      required:
        - alternateDisplayValue
        - american

    OddsItemCurrent:
      type: object
      properties:
        over:
          $ref: '#/components/schemas/OddsValue'
        under:
          $ref: '#/components/schemas/OddsValue'
        total:
          $ref: '#/components/schemas/OddsValue'

    HeadToHeads:
      type: object
      properties:
        $ref:
          type: string
          format: uri

    SpreadRecord:
      type: object
      properties:
        wins:
          type: integer
        losses:
          type: integer
        pushes:
          type: integer
        summary:
          type: string
      required:
        - wins
        - losses
        - pushes
        - summary

    CompetitionBroadcastsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionBroadcastItem'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    CompetitionBroadcastItem:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BroadcastType'
        channel:
          type: integer
        station:
          type: string
        slug:
          type: string
        priority:
          type: integer
        market:
          $ref: '#/components/schemas/BroadcastMarket'
        media:
          $ref: '#/components/schemas/BroadcastMedia'
        lang:
          type: string
        region:
          type: string
        competition:
          $ref: '#/components/schemas/Reference'
        partnered:
          type: boolean
      required:
        - type
        - channel
        - station
        - slug
        - priority
        - market
        - media
        - lang
        - region
        - competition
        - partnered

    BroadcastType:
      type: object
      properties:
        id:
          type: string
        shortName:
          type: string
        longName:
          type: string
        slug:
          type: string
      required:
        - id
        - shortName
        - longName
        - slug

    BroadcastMarket:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
      required:
        - id
        - type

    BroadcastMedia:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        callLetters:
          type: string
        name:
          type: string
        shortName:
          type: string
        slug:
          type: string
        logos:
          type: array
          items:
            $ref: '#/components/schemas/BroadcastLogo'
      required:
        - $ref
        - id
        - callLetters
        - name
        - shortName
        - slug
        - logos

    BroadcastLogo:
      type: object
      properties:
        href:
          type: string
          format: uri
        width:
          type: integer
        height:
          type: integer
        alt:
          type: string
        rel:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
      required:
        - href
        - width
        - height
        - alt
        - rel
        - lastUpdated

    CompetitionOfficialsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionOfficialItem'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    CompetitionOfficialItem:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        position:
          $ref: '#/components/schemas/OfficialPosition'
        order:
          type: integer
      required:
        - $ref
        - id
        - firstName
        - lastName
        - fullName
        - displayName
        - position
        - order

    OfficialPosition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
      required:
        - id
        - name
        - displayName

    CompetitionLeadersResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        type:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionLeadersCategory'
      required:
        - $ref
        - id
        - name
        - abbreviation
        - type
        - categories

    CompetitionLeadersCategory:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        shortDisplayName:
          type: string
        abbreviation:
          type: string
        leaders:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionLeader'
      required:
        - name
        - displayName
        - shortDisplayName
        - abbreviation
        - leaders

    CompetitionLeader:
      type: object
      properties:
        displayValue:
          type: string
        value:
          type: number
        rel:
          type: array
          items:
            type: string
        athlete:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
        statistics:
          $ref: '#/components/schemas/Reference'
      required:
        - displayValue
        - value
        - rel
        - athlete
        - statistics
        - team

    CompetitionAthleteStatisticsResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        competition:
          $ref: '#/components/schemas/Reference'
        splits:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            abbreviation:
              type: string
            categories:
              type: array
              items:
                $ref: '#/components/schemas/StatisticCategory'
          required:
            - id
            - name
            - abbreviation
            - categories
        athlete:
          $ref: '#/components/schemas/Reference'
      required:
        - $ref
        - competition
        - splits
        - athlete
      description: Statistics for a specific athlete in a competition (game).

    MlbAthleteDetailsResponse:
      type: object
      required:
        - $ref
        - active
        - age
        - alternateIds
        - awards
        - bats
        - birthPlace
        - college
        - contracts
        - dateOfBirth
        - debut
        - debutYear
        - displayHeight
        - displayName
        - displayWeight
        - draft
        - experience
        - firstName
        - fullName
        - guid
        - headshot
        - height
        - id
        - jersey
        - lastName
        - linked
        - links
        - nickname
        - position
        - shortName
        - slug
        - statistics
        - statisticslog
        - status
        - team
        - throws
        - type
        - uid
        - weight
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        uid:
          type: string
        guid:
          type: string
          format: uuid
        type:
          type: string
        alternateIds:
          type: object
          properties:
            sdr:
              type: string
          required:
            - sdr
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        nickname:
          type: string
        shortName:
          type: string
        weight:
          type: number
        displayWeight:
          type: string
        height:
          type: number
        displayHeight:
          type: string
        age:
          type: integer
        dateOfBirth:
          type: string
        debutYear:
          type: integer
        links:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                format: uri
        birthPlace:
          type: object
          properties:
            city:
              type: string
            state:
              type: string
            country:
              type: string
        college:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        slug:
          type: string
        headshot:
          type: object
          properties:
            href:
              type: string
              format: uri
        jersey:
          type: string
        position:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        linked:
          type: boolean
        team:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        statistics:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        contracts:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        experience:
          type: object
          properties:
            years:
              type: integer
            displayValue:
              type: string
        debut:
          type: object
          properties:
            year:
              type: integer
            date:
              type: string
        active:
          type: boolean
        draft:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        status:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        statisticslog:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        awards:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        bats:
          type: object
          properties:
            code:
              type: string
            abbreviation:
              type: string
            displayValue:
              type: string
        throws:
          type: object
          properties:
            code:
              type: string
            abbreviation:
              type: string
            displayValue:
              type: string

    PositionsListResponse:
      type: object
      required:
        - count
        - items
        - pageCount
        - pageIndex
        - pageSize
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      description: Paginated list of player positions for a given sport and league.
    
    TransactionsListResponse:
      type: object
      required:
        - count
        - items
        - pageCount
        - pageIndex
        - pageSize
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            type: object
            description: "Transaction object (structure may vary by sport/league, currently empty for NFL)"
      description: Paginated list of transactions for a given sport and league.