openapi: 3.0.3
info:
  title: ESPN Sports Core API
  version: 1.0.0
  description: Unofficial ESPN Sports Core API for retrieving detailed sports data from sports.core.api.espn.com. This API is not officially supported by ESPN and may change without notice.

servers:
  - url: https://sports.core.api.espn.com
    description: ESPN Sports Core API Production Server
  - url: https://now.core.api.espn.com
    description: ESPN Now Core API Production Server

paths:
  /v2/sports/{sport}/leagues/{league}/athletes/{athleteId}:
    get:
      summary: Get Athlete Details
      description: Retrieve detailed information for a specific athlete in any supported sport/league.
      operationId: getAthleteDetails
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "3139477"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteDetailsResponse'
        '404':
          description: Athlete not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/athletes:
    get:
      summary: List Athletes
      description: Retrieve a paginated list of athletes for a specific sport and league.
      operationId: getAthletesList
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey, soccer)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl, eng.1)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: pageIndex
          in: query
          required: false
          description: Page index for pagination
          schema:
            type: integer
            minimum: 1
            default: 1
            example: 1
        - name: pageSize
          in: query
          required: false
          description: Page size for pagination
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
            example: 25
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthletesListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Sport or league not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/athletes/{athleteId}/statistics:
    get:
      summary: Get Athlete Statistics
      description: Retrieve detailed statistics for a specific athlete in any supported sport/league. Query parameters allow filtering by season, week, and season type.
      operationId: getAthleteStatistics
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "3139477"
        - name: limit
          in: query
          required: false
          description: Limit the number of statistics returned
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: seasontype
          in: query
          required: false
          description: The season type (e.g., 1=preseason, 2=regular, 3=postseason)
          schema:
            type: integer
            enum: [1, 2, 3]
        - name: year
          in: query
          required: false
          description: The year/season to filter statistics for
          schema:
            type: integer
            minimum: 1900
            maximum: 2100
        - name: week
          in: query
          required: false
          description: The week number to filter statistics for
          schema:
            type: integer
            minimum: 1
            maximum: 30
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteStatisticsResponse'
        '404':
          description: Athlete statistics not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/athletes/{athleteId}/statisticslog:
    get:
      summary: Get Athlete Statistics Log
      description: Retrieve log of statistics for a specific athlete across games/seasons in any supported sport/league.
      operationId: getAthleteStatisticsLog
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "3139477"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteStatisticsLogResponse'
        '404':
          description: Athlete statistics log not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/athletes/{athleteId}/statistics/{categoryId}:
    get:
      summary: Get Athlete Statistics by Category
      description: Retrieve detailed statistics for a specific athlete broken down by statistical categories (e.g., passing, rushing, receiving for football; batting, fielding for baseball).
      operationId: getAthleteStatisticsByCategory
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "3139477"
        - name: categoryId
          in: path
          required: true
          description: The statistical category ID (usually "0" for all categories)
          schema:
            type: string
            example: "0"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteStatisticsByCategoryResponse'
        '404':
          description: Athlete statistics not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/athletes/{athleteId}/contracts:
    get:
      summary: Get Athlete Contracts
      description: Retrieve contract information for a specific athlete. Returns a list of contracts by year.
      operationId: getAthleteContracts
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "1966"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteContractsResponse'
        '404':
          description: Athlete not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/athletes/{athleteId}/contracts/{year}:
    get:
      summary: Get Athlete Contract for Specific Year
      description: Retrieve detailed contract information for a specific athlete in a specific year.
      operationId: getAthleteContractByYear
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "1966"
        - name: year
          in: path
          required: true
          description: The year of the contract
          schema:
            type: string
            example: "2024"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AthleteContract'
        '404':
          description: Contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}:
    get:
      summary: Get League Information
      description: Retrieve detailed information about a specific league, including current season, teams, franchises, and other league-specific data.
      operationId: getLeagueInfo
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl, college-football, mens-college-basketball)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueInfoResponse'
        '404':
          description: League not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/calendar:
    get:
      summary: Get League Calendar
      description: Retrieve the calendar for a given league and sport (e.g., NFL, NBA, etc). Returns a list of calendar resource references.
      operationId: getLeagueCalendar
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/venues:
    get:
      summary: Get League Venues
      description: Retrieve the list of venues for a given league and sport. Returns a paginated list of venue resource references.
      operationId: getLeagueVenues
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/franchises:
    get:
      summary: Get League Franchises
      description: Retrieve the list of franchises for a given league and sport. Returns a paginated list of franchise resource references.
      operationId: getLeagueFranchises
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons:
    get:
      summary: Get League Seasons
      description: Retrieve the list of seasons for a given league and sport. Returns a paginated list of season resource references.
      operationId: getLeagueSeasons
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasonType}/weeks:
    get:
      summary: Get League Season Weeks
      description: Retrieve the list of weeks for a given season and season type in a league and sport. Returns a paginated list of week resource references.
      operationId: getLeagueSeasonWeeks
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: seasonType
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason, 4=off-season)
          schema:
            type: integer
            enum: [1, 2, 3, 4]
            example: 2
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasonType}/groups:
    get:
      summary: Get League Season Groups
      description: Retrieve the list of groups (conferences/divisions) for a given season and season type in a league and sport. Returns a paginated list of group resource references.
      operationId: getLeagueSeasonGroups
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: seasonType
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason, 4=off-season)
          schema:
            type: integer
            enum: [1, 2, 3, 4]
            example: 2
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasonType}/corrections:
    get:
      summary: Get League Season Stat Corrections
      description: Retrieve the list of statistical corrections for a given season and season type in a league and sport. Returns a paginated list of stat correction records.
      operationId: getLeagueSeasonCorrections
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: seasonType
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason, 4=off-season)
          schema:
            type: integer
            enum: [1, 2, 3, 4]
            example: 2
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatCorrectionsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasonType}/groups/{groupId}:
    get:
      summary: Get League Season Group Details
      description: Retrieve detailed information for a specific group (conference/division) in a given season and season type.
      operationId: getLeagueSeasonGroupDetails
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: seasonType
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason, 4=off-season)
          schema:
            type: integer
            enum: [1, 2, 3, 4]
            example: 2
        - name: groupId
          in: path
          required: true
          description: The group ID (e.g., 7=NFC, 8=AFC for NFL)
          schema:
            type: string
            example: "7"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetailsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events:
    get:
      summary: Get League Events
      description: Retrieve the list of events for a given league and sport. Returns a paginated list of event resource references.
      operationId: getLeagueEvents
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: week
          in: query
          required: false
          description: Filter by week number
          schema:
            type: integer
            example: 1
        - name: season
          in: query
          required: false
          description: Filter by season year
          schema:
            type: integer
            example: 2024
        - name: seasontypes
          in: query
          required: false
          description: Filter by season type(s) (comma-separated)
          schema:
            type: string
            example: "2"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{eventId}:
    get:
      summary: Get League Event Details
      description: Retrieve detailed information for a specific event in a league and sport.
      operationId: getLeagueEventDetails
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: eventId
          in: path
          required: true
          description: The event ID
          schema:
            type: string
            example: "401772510"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/events/{eventId}/competitions/{competitionId}/drives:
    get:
      summary: Get Drives for a Competition
      description: Retrieve all drives for a given NFL event/competition.
      operationId: getNFLCompetitionDrives
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
        - name: competitionId
          in: path
          required: true
          schema:
            type: string
        - name: pageIndex
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivesListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/events/{eventId}/competitions/{competitionId}/plays:
    get:
      summary: Get Plays for a Competition
      description: Retrieve all plays for a given NFL event/competition.
      operationId: getNFLCompetitionPlays
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
        - name: competitionId
          in: path
          required: true
          schema:
            type: string
        - name: pageIndex
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaysListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/leaders:
    get:
      summary: Get NFL League Leaders
      description: Retrieve league leaders for various statistical categories in the NFL.
      operationId: getNFLLeaders
      parameters:
        - name: limit
          in: query
          required: false
          description: Maximum number of leader entries to return per category
          schema:
            type: integer
            example: 10
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflLeadersResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/types/{seasontype}/leaders:
    get:
      summary: Get NFL Leaders for a Season and Type
      description: Retrieve league leaders for various statistical categories in the NFL for a specific season and season type (e.g., regular, postseason).
      operationId: getNFLSeasonTypeLeaders
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: seasontype
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason)
          schema:
            type: integer
            example: 2
        - name: limit
          in: query
          required: false
          description: Maximum number of leader entries to return per category
          schema:
            type: integer
            example: 10
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflLeadersResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/teams/{team_id}:
    get:
      summary: Get NFL Team Details for a Season
      description: Retrieve detailed information for a specific NFL team in a given season (core API).
      operationId: getNflSeasonTeam
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: team_id
          in: path
          required: true
          description: The team ID (e.g., 12)
          schema:
            type: string
            example: "12"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreNflSeasonTeamResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/teams/{team_id}/injuries:
    get:
      summary: Get NFL Team Injuries
      description: Retrieve a paginated list of injury references for a specific NFL team.
      operationId: getNflTeamInjuries
      parameters:
        - name: team_id
          in: path
          required: true
          description: The team ID (e.g., 12)
          schema:
            type: string
            example: "12"
        - name: pageIndex
          in: query
          required: false
          description: Page index for pagination
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          required: false
          description: Page size for pagination
          schema:
            type: integer
            example: 25
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/draft:
    get:
      summary: Get NFL Draft for a Season
      description: Retrieve NFL Draft data for a specific season, including rounds, athletes, positions, and team needs.
      operationId: getNflDraft
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflDraftResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/teams/{team_id}/depthcharts:
    get:
      summary: Get NFL Team Depth Chart
      description: Retrieve the depth chart for a specific NFL team in a given season (core API).
      operationId: getNflTeamDepthchart
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: team_id
          in: path
          required: true
          description: The team ID (e.g., 2)
          schema:
            type: string
            example: "2"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflTeamDepthchartResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasontype}/teams/{teamId}/attendance:
    get:
      summary: Get Team Attendance
      description: Retrieve attendance statistics for a specific team in a given season.
      operationId: getTeamAttendance
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: seasontype
          in: path
          required: true
          description: The season type (1=preseason, 2=regular season, 3=postseason)
          schema:
            type: integer
            example: 2
        - name: teamId
          in: path
          required: true
          description: The team ID
          schema:
            type: string
            example: "12"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamAttendanceResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasontype}/teams/{teamId}/leaders:
    get:
      summary: Get Team Leaders
      description: Retrieve statistical leaders for a specific team in a given season.
      operationId: getTeamLeaders
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: seasontype
          in: path
          required: true
          description: The season type (1=preseason, 2=regular season, 3=postseason)
          schema:
            type: integer
            example: 2
        - name: teamId
          in: path
          required: true
          description: The team ID
          schema:
            type: string
            example: "12"
        - name: limit
          in: query
          required: false
          description: Limit the number of results
          schema:
            type: integer
            example: 25
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLeadersResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/types/{seasontype}/teams/{teamId}/ats:
    get:
      summary: Get Team ATS Records
      description: |
        Retrieve Against The Spread (ATS) records for a specific team in a given season.
        
        **Note**: This endpoint is only supported for sports with variable point spreads (NFL, NBA).
        MLB and NHL will return 500 errors as they use fixed spreads (run line and puck line respectively).
      operationId: getTeamAtsRecords
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: seasontype
          in: path
          required: true
          description: The season type (1=preseason, 2=regular season, 3=postseason)
          schema:
            type: integer
            example: 2
        - name: teamId
          in: path
          required: true
          description: The team ID
          schema:
            type: string
            example: "12"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamAtsRecordsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/athletes/{athlete_id}/eventlog:
    get:
      summary: Get NFL Athlete Event Log
      description: Retrieve the event log for a specific NFL athlete in a given season (core API).
      operationId: getNflAthleteEventlog
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: athlete_id
          in: path
          required: true
          description: The athlete ID (e.g., 3139477)
          schema:
            type: string
            example: "3139477"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflAthleteEventlogResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/draft/rounds:
    get:
      summary: Get NFL Draft Rounds
      description: Retrieve all rounds and picks for the NFL draft for a given season (core API).
      operationId: getNflDraftRounds
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflDraftRoundsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/draft/athletes/{athlete_id}:
    get:
      summary: Get Draft Athlete Details
      description: Retrieve details for a specific draft athlete for any supported sport/league (core API). Currently supported for NFL and NBA.
      operationId: getDraftAthlete
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: athlete_id
          in: path
          required: true
          description: The draft athlete ID (e.g., 106308 for NFL, 106535 for NBA)
          schema:
            type: string
            example: "106308"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftAthleteResponse'
        '404':
          description: Draft athlete not found or sport/league does not support draft data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/coaches:
    get:
      summary: Get Season Coaches List
      description: Retrieve a paginated list of coaches for a specific sport, league, and season.
      operationId: getSeasonCoaches
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: limit
          in: query
          required: false
          description: Maximum number of coaches to return per page
          schema:
            type: integer
            default: 25
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/coaches/{coach_id}:
    get:
      summary: Get Season Coach Details
      description: Retrieve details for a specific coach in a given sport, league, and season.
      operationId: getSeasonCoachDetails
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2024)
          schema:
            type: integer
            example: 2024
        - name: coach_id
          in: path
          required: true
          description: The coach ID
          schema:
            type: string
            example: "17751"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachDetailsResponse'
        '404':
          description: Coach not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/seasons/{year}/futures:
    get:
      summary: Get Season Futures
      description: Retrieve betting futures for a specific season including championship winners, division winners, player props, and more.
      operationId: getSeasonFutures
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: year
          in: path
          required: true
          description: The season year
          schema:
            type: integer
            example: 2024
        - name: limit
          in: query
          required: false
          description: Number of items to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FuturesResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/draft/athletes/{athlete_id}:
    get:
      summary: Get NFL Draft Athlete Details
      description: Retrieve details for a specific NFL draft athlete (core API).
      operationId: getNflDraftAthlete
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: athlete_id
          in: path
          required: true
          description: The draft athlete ID (e.g., 106308)
          schema:
            type: string
            example: "106308"
        - name: lang
          in: query
          required: false
          description: Language code
          schema:
            type: string
            example: en
        - name: region
          in: query
          required: false
          description: Region code
          schema:
            type: string
            example: us
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflDraftAthleteResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/football/leagues/nfl/seasons/{year}/types/{seasontype}/groups/{group_id}/standings:
    get:
      summary: Get NFL Conference Standings
      description: Retrieve NFL conference standings for a given year, season type, and group (e.g., NFC or AFC).
      operationId: getNFLConferenceStandings
      parameters:
        - name: year
          in: path
          required: true
          description: The season year (e.g., 2023)
          schema:
            type: integer
            example: 2023
        - name: seasontype
          in: path
          required: true
          description: The season type (1=preseason, 2=regular, 3=postseason, 4=off-season)
          schema:
            type: integer
            enum: [1, 2, 3, 4]
            example: 2
        - name: group_id
          in: path
          required: true
          description: The group ID (e.g., 7 for NFC, 8 for AFC)
          schema:
            type: integer
            example: 7
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NflConferenceStandingsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}:
    get:
      summary: Get Competition Detail
      description: Retrieve detailed information for a specific competition within an event for a given sport and league.
      operationId: getCompetitionDetail
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionDetail'
        '404':
          description: Competition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/situation:
    get:
      summary: Get Competition Situation
      description: Retrieve the current situation (down, distance, yard line, timeouts, etc) for a specific competition (game).
      operationId: getCompetitionSituation
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
            example: '401220403'
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
            example: '401220403'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionSituationResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/status:
    get:
      summary: Get Competition Status
      description: Retrieve the current status (clock, period, state, etc) for a specific competition (game).
      operationId: getCompetitionStatus
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionStatus'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/odds:
    get:
      summary: Get Competition Odds
      description: Retrieve betting odds for a specific competition within an event for a given sport and league.
      operationId: getCompetitionOdds
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OddsResponse'
        '404':
          description: Odds not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/odds/{provider_id}:
    get:
      summary: Get Competition Odds from Specific Provider
      description: Retrieve betting odds from a specific provider for a competition within an event for a given sport and league.
      operationId: getCompetitionOddsProvider
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
        - name: provider_id
          in: path
          required: true
          description: The odds provider ID (e.g., 58 for ESPN BET)
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OddsItem'
        '404':
          description: Odds not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/odds/{provider_id}/head-to-heads:
    get:
      summary: Get Head-to-Head Odds from Provider
      description: Retrieve head-to-head betting odds from a specific provider for a competition.
      operationId: getCompetitionOddsHeadToHeads
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
        - name: provider_id
          in: path
          required: true
          description: The odds provider ID (e.g., 58 for ESPN BET)
          schema:
            type: string
      responses:
        '200':
          description: Successful response with paginated head-to-head odds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeadToHeadsListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/broadcasts:
    get:
      summary: Get Competition Broadcasts
      description: Retrieve broadcast information for a specific competition within an event for a given sport and league.
      operationId: getCompetitionBroadcasts
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionBroadcastsResponse'
        '404':
          description: Broadcasts not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/officials:
    get:
      summary: Get Competition Officials
      description: Retrieve officials for a specific competition within an event for a given sport and league.
      operationId: getCompetitionOfficials
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionOfficialsResponse'
        '404':
          description: Officials not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/leaders:
    get:
      summary: Get Competition Leaders
      description: Retrieve statistical leaders for a specific competition within an event for a given sport and league.
      operationId: getCompetitionLeaders
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionLeadersResponse'
        '404':
          description: Leaders not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/competitors/{competitor_id}/roster/{athlete_id}/statistics/{page}:
    get:
      summary: Get Competition Athlete Statistics
      description: Retrieve detailed statistics for a specific athlete in a competition (game) for a given sport and league.
      operationId: getCompetitionAthleteStatistics
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
        - name: competition_id
          in: path
          required: true
          description: The competition ID
          schema:
            type: string
        - name: competitor_id
          in: path
          required: true
          description: The competitor ID (team ID within the competition)
          schema:
            type: string
        - name: athlete_id
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
        - name: page
          in: path
          required: true
          description: The statistics page number (usually 0)
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionAthleteStatisticsResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/probabilities:
    get:
      summary: Get Game Win Probabilities
      description: Retrieve win probability data for each play in a game. Shows how the probability of each team winning changed throughout the game.
      operationId: getGameProbabilities
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
            example: "401547417"
        - name: competition_id
          in: path
          required: true
          description: The competition ID (usually the same as event_id)
          schema:
            type: string
            example: "401547417"
        - name: limit
          in: query
          required: false
          description: Maximum number of probabilities to return per page
          schema:
            type: integer
            default: 25
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbabilitiesListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/events/{event_id}/competitions/{competition_id}/predictor:
    get:
      summary: Get Game Predictor Metrics
      description: Retrieve ESPN Predictor metrics for a specific game including win probabilities, efficiency ratings, and predicted outcomes.
      operationId: getGamePredictor
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: event_id
          in: path
          required: true
          description: The event ID
          schema:
            type: string
            example: "401547602"
        - name: competition_id
          in: path
          required: true
          description: The competition ID (usually the same as event_id)
          schema:
            type: string
            example: "401547602"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictorResponse'
        '400':
          description: Bad request
        '404':
          description: Game or predictor data not found

  /v2/sports/baseball/leagues/mlb/athletes/{athleteId}:
    get:
      summary: Get MLB Athlete Details
      description: Retrieve detailed information for a specific MLB athlete
      operationId: getMLBAthleteDetails
      parameters:
        - name: athleteId
          in: path
          required: true
          description: The athlete ID
          schema:
            type: string
            example: "33192"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlbAthleteDetailsResponse'
        '404':
          description: Athlete not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/positions:
    get:
      summary: List Player Positions
      description: Retrieve a paginated list of player positions for a given sport and league.
      operationId: getPositionsList
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport (e.g., football, baseball)
          schema:
            type: string
        - name: league
          in: path
          required: true
          description: The league (e.g., nfl, mlb)
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Maximum number of positions to return
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/providers:
    get:
      summary: List Betting Providers
      description: Retrieve a paginated list of betting/odds providers for a given sport and league.
      operationId: getProvidersList
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: limit
          in: query
          required: false
          description: Maximum number of providers to return per page
          schema:
            type: integer
            default: 25
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvidersListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/providers/{providerId}:
    get:
      summary: Get Provider Details
      description: Retrieve details for a specific betting/odds provider.
      operationId: getProviderDetails
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball, baseball, hockey)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba, mlb, nhl)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: providerId
          in: path
          required: true
          description: The provider ID
          schema:
            type: string
            example: "58"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderDetails'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v2/sports/{sport}/leagues/{league}/transactions:
    get:
      summary: Get League Transactions
      description: Retrieve the list of transactions for a given league and sport. Returns a paginated list of transaction objects (empty array if none).
      operationId: getLeagueTransactions
      parameters:
        - name: sport
          in: path
          required: true
          description: The sport key (e.g., football, basketball)
          schema:
            $ref: '#/components/schemas/SportEnum'
        - name: league
          in: path
          required: true
          description: The league key (e.g., nfl, nba)
          schema:
            $ref: '#/components/schemas/LeagueEnum'
        - name: limit
          in: query
          required: false
          description: Maximum number of results to return
          schema:
            type: integer
            example: 25
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsListResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/sports/news:
    get:
      summary: Get Sports News
      description: Retrieve sports news headlines. Can be filtered by sport.
      operationId: getSportsNews
      servers:
        - url: https://now.core.api.espn.com
          description: ESPN Now Core API Production Server
      parameters:
        - name: limit
          in: query
          required: false
          description: Number of headlines to return
          schema:
            type: integer
            default: 50
            minimum: 1
            maximum: 1000
        - name: sport
          in: query
          required: false
          description: Filter news by sport (e.g., football, basketball, baseball)
          schema:
            type: string
            example: football
        - name: offset
          in: query
          required: false
          description: Offset for pagination
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    AthleteDetailsResponse:
      type: object
      properties:
        id:
          type: string
          example: "3139477"
        uid:
          type: string
          example: "s:20~l:28~a:3139477"
        guid:
          type: string
          example: "37d87523-280a-9d4a-0adb-22cfc6d3619c"
        type:
          type: string
          example: "football"
        alternateIds:
          type: object
          properties:
            sdr:
              type: string
              example: "3139477"
        firstName:
          type: string
          example: "Patrick"
        lastName:
          type: string
          example: "Mahomes"
        fullName:
          type: string
          example: "Patrick Mahomes"
        displayName:
          type: string
          example: "Patrick Mahomes"
        shortName:
          type: string
          example: "P. Mahomes"
        weight:
          type: number
          format: float
          example: 225.0
        displayWeight:
          type: string
          example: "225 lbs"
        height:
          type: number
          format: float
          example: 74.0
        displayHeight:
          type: string
          example: "6' 2\""
        age:
          type: integer
          example: 29
        dateOfBirth:
          type: string
          format: date-time
          example: "1995-09-17T07:00Z"
        debutYear:
          type: integer
          example: 2017
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        jersey:
          type: string
          example: "15"
        position:
          $ref: '#/components/schemas/Position'
        team:
          oneOf:
            - $ref: '#/components/schemas/Team'
            - $ref: '#/components/schemas/Reference'
        active:
          type: boolean
          example: true
        status:
          $ref: '#/components/schemas/AthleteStatus'
        experience:
          type: object
          properties:
            years:
              type: integer
              example: 7
            displayValue:
              type: string
              example: "7 years"
      required:
        - id
        - uid
        - fullName

    AthletesListResponse:
      type: object
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items
      properties:
        count:
          type: integer
          description: Total number of athletes
          example: 1192
        pageIndex:
          type: integer
          description: Current page index
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 25
        pageCount:
          type: integer
          description: Total number of pages
          example: 48
        items:
          type: array
          description: List of athlete references
          items:
            $ref: '#/components/schemas/Reference'
      description: Paginated list of athletes for a given sport and league.

    AthleteStatisticsResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/athletes/3139477/statistics/0?lang=en&region=us"
        athlete:
          $ref: '#/components/schemas/AthleteReference'
        splits:
          type: object
          properties:
            id:
              type: string
              example: "0"
            name:
              type: string
              example: "All Splits"
            abbreviation:
              type: string
              example: "Total"
            type:
              type: string
              example: "total"
              nullable: true
            categories:
              type: array
              items:
                $ref: '#/components/schemas/StatisticCategory'
          required:
            - id
            - name
            - abbreviation
            - categories
      required:
        - $ref
        - athlete
        - splits

    AthleteContractsResponse:
      type: object
      properties:
        count:
          type: integer
          example: 20
        pageIndex:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 25
        pageCount:
          type: integer
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    AthleteContract:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/basketball/leagues/nba/athletes/1966/contracts/2024?lang=en&region=us"
        birdStatus:
          type: integer
          example: 0
        baseYearCompensation:
          type: object
          properties:
            active:
              type: boolean
              example: false
          required:
            - active
        poisonPillProvision:
          type: object
          properties:
            active:
              type: boolean
              example: false
          required:
            - active
        incomingTradeValue:
          type: integer
          example: 47607350
        outgoingTradeValue:
          type: integer
          example: 47607350
        minimumSalaryException:
          type: boolean
          example: false
        optionType:
          type: integer
          example: 0
        salary:
          type: integer
          example: 47607350
        salaryRemaining:
          type: integer
          example: 0
        yearsRemaining:
          type: integer
          example: 2
        season:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
        tradeKicker:
          type: object
          properties:
            active:
              type: boolean
              example: false
            percentage:
              type: number
              example: 0
            value:
              type: integer
              example: 0
            tradeValue:
              type: integer
              example: 0
          required:
            - active
            - percentage
            - value
            - tradeValue
        tradeRestriction:
          type: boolean
          example: true
        unsignedForeignPick:
          type: boolean
          example: false
        active:
          type: boolean
          example: true
      required:
        - $ref
        - birdStatus
        - baseYearCompensation
        - poisonPillProvision
        - incomingTradeValue
        - outgoingTradeValue
        - minimumSalaryException
        - optionType
        - salary
        - salaryRemaining
        - yearsRemaining
        - season
        - team
        - tradeKicker
        - tradeRestriction
        - unsignedForeignPick
        - active

    AthleteStatisticsLogResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        athlete:
          $ref: '#/components/schemas/AthleteReference'
          nullable: true
        entries:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsLogEntry'
      required:
        - entries

    AthleteStatisticsByCategoryResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/athletes/3139477/statistics/0?lang=en&region=us"
        athlete:
          $ref: '#/components/schemas/AthleteReference'
        splits:
          type: object
          properties:
            id:
              type: string
              example: "0"
            name:
              type: string
              example: "All Splits"
            abbreviation:
              type: string
              example: "Any"
            categories:
              type: array
              items:
                $ref: '#/components/schemas/StatisticCategory'
          required:
            - id
            - name
            - categories
      required:
        - $ref
        - athlete
        - splits

    AthleteReference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/athletes/3139477?lang=en&region=us"
      required:
        - $ref

    StatisticCategory:
      type: object
      properties:
        name:
          type: string
          example: "passing"
        displayName:
          type: string
          example: "Passing"
        shortDisplayName:
          type: string
          example: "Passing"
        abbreviation:
          type: string
          example: "PASS"
        summary:
          type: string
          example: ""
        stats:
          type: array
          items:
            $ref: '#/components/schemas/Statistic'
      required:
        - name
        - displayName
        - stats

    Statistic:
      type: object
      properties:
        name:
          type: string
          example: "completions"
        displayName:
          type: string
          example: "Completions"
        shortDisplayName:
          type: string
          example: "COMP"
        description:
          type: string
          example: "The number of passes completed"
        abbreviation:
          type: string
          example: "COMP"
        value:
          type: number
          example: 401.0
        displayValue:
          type: string
          example: "401"
      required:
        - name
        - value

    StatisticsLogEntry:
      type: object
      properties:
        season:
          $ref: '#/components/schemas/Reference'
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/StatisticsTypeEntry'
      required:
        - season
        - statistics
        
    StatisticsTypeEntry:
      type: object
      properties:
        type:
          type: string
          example: "total"
        team:
          oneOf:
            - $ref: '#/components/schemas/Team'
            - $ref: '#/components/schemas/Reference'
          nullable: true
        statistics:
          $ref: '#/components/schemas/StatisticsReference'
      required:
        - type
        - statistics
        
    StatisticsReference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/seasons/2024/types/2/athletes/3139477/statistics/0?lang=en&region=us"
      required:
        - $ref

    EventReference:
      type: object
      properties:
        id:
          type: string
          example: "401547417"
        date:
          type: string
          format: date-time
          example: "2023-02-12T23:30:00Z"
        homeTeam:
          $ref: '#/components/schemas/TeamReference'
        awayTeam:
          $ref: '#/components/schemas/TeamReference'

    Season:
      type: object
      properties:
        year:
          type: integer
          example: 2023
        type:
          type: integer
          example: 2
          description: "Season type (1=preseason, 2=regular, 3=postseason)"
        slug:
          type: string
          example: "regular-season"
      required:
        - year
        - type

    Position:
      type: object
      properties:
        id:
          type: string
          example: "8"
        name:
          type: string
          example: "Quarterback"
        displayName:
          type: string
          example: "Quarterback"
        abbreviation:
          type: string
          example: "QB"
        leaf:
          type: boolean
          example: true
      required:
        - id
        - name
        - abbreviation

    Team:
      type: object
      properties:
        id:
          type: string
          example: "12"
        uid:
          type: string
          example: "s:20~l:28~t:12"
        location:
          type: string
          example: "Kansas City"
        name:
          type: string
          example: "Chiefs"
        abbreviation:
          type: string
          example: "KC"
        displayName:
          type: string
          example: "Kansas City Chiefs"
        shortDisplayName:
          type: string
          example: "Chiefs"
        color:
          type: string
          example: "e31837"
        alternateColor:
          type: string
          example: "ffb612"
        logo:
          type: string
          format: uri
          example: "https://a.espncdn.com/i/teamlogos/nfl/500/kc.png"
      required:
        - id
        - displayName

    TeamReference:
      type: object
      properties:
        id:
          type: string
          example: "12"
        abbreviation:
          type: string
          example: "KC"
        displayName:
          type: string
          example: "Kansas City Chiefs"
      required:
        - id
        - displayName

    AthleteStatus:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "Active"
        type:
          type: string
          example: "active"
        abbreviation:
          type: string
          example: "ACT"
      required:
        - id
        - name

    Link:
      type: object
      properties:
        href:
          type: string
          format: uri
        text:
          type: string
          example: "Standings"
        rel:
          type: array
          items:
            type: string
            example: "standings"
      required:
        - href
        - rel

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string

    Reference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    CalendarListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 4
        pageIndex:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 25
        pageCount:
          type: integer
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    LeagueInfoResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl?lang=en&region=us"
        id:
          type: string
          example: "28"
        uid:
          type: string
          example: "s:20~l:28"
        guid:
          type: string
          example: "ad4c3bd2-ddb6-3f8c-8abf-744855a08fa4"
        name:
          type: string
          example: "National Football League"
        displayName:
          type: string
          example: "NFL"
        abbreviation:
          type: string
          example: "NFL"
        shortName:
          type: string
          example: "NFL"
        midsizeName:
          type: string
          example: "NCAA Football"
        slug:
          type: string
          example: "nfl"
        isTournament:
          type: boolean
          example: false
        gender:
          type: string
          example: "MALE"
        season:
          $ref: '#/components/schemas/LeagueSeason'
        seasons:
          $ref: '#/components/schemas/Reference'
        franchises:
          $ref: '#/components/schemas/Reference'
        teams:
          $ref: '#/components/schemas/Reference'
        group:
          $ref: '#/components/schemas/Reference'
        groups:
          $ref: '#/components/schemas/Reference'
        events:
          $ref: '#/components/schemas/Reference'
        notes:
          $ref: '#/components/schemas/Reference'
        rankings:
          $ref: '#/components/schemas/Reference'
        awards:
          $ref: '#/components/schemas/Reference'
        calendar:
          $ref: '#/components/schemas/Reference'
        transactions:
          $ref: '#/components/schemas/Reference'
        draft:
          $ref: '#/components/schemas/Reference'
        leaders:
          $ref: '#/components/schemas/Reference'
        athletes:
          $ref: '#/components/schemas/Reference'
        freeAgents:
          $ref: '#/components/schemas/Reference'
        talentPicks:
          $ref: '#/components/schemas/Reference'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        logos:
          type: array
          items:
            $ref: '#/components/schemas/Logo'
      required:
        - id
        - name
        - displayName
        - abbreviation
        - slug

    LeagueSeason:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        year:
          type: integer
          example: 2024
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        displayName:
          type: string
          example: "2024"
        type:
          $ref: '#/components/schemas/SeasonType'
        types:
          $ref: '#/components/schemas/SeasonTypesList'
        rankings:
          $ref: '#/components/schemas/Reference'
        athletes:
          $ref: '#/components/schemas/Reference'
        futures:
          $ref: '#/components/schemas/Reference'
        leaders:
          $ref: '#/components/schemas/Reference'
        coaches:
          $ref: '#/components/schemas/Reference'
        awards:
          $ref: '#/components/schemas/Reference'
        powerIndexes:
          $ref: '#/components/schemas/Reference'
        powerIndexLeaders:
          $ref: '#/components/schemas/Reference'
      required:
        - year
        - startDate
        - endDate
        - displayName

    SeasonType:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        type:
          type: integer
        name:
          type: string
        abbreviation:
          type: string
        year:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        hasGroups:
          type: boolean
        hasStandings:
          type: boolean
        hasLegs:
          type: boolean
        groups:
          $ref: '#/components/schemas/Reference'
        weeks:
          $ref: '#/components/schemas/Reference'
        week:
          $ref: '#/components/schemas/SeasonWeek'
        corrections:
          $ref: '#/components/schemas/Reference'
        leaders:
          $ref: '#/components/schemas/Reference'
        slug:
          type: string
      required:
        - id
        - type
        - name
        - abbreviation

    SeasonWeek:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        number:
          type: integer
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        text:
          type: string
        rankings:
          $ref: '#/components/schemas/Reference'

    SeasonTypesList:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/SeasonType'

    PaginatedReferenceListResponse:
      type: object
      properties:
        count:
          type: integer
          example: 18
        pageIndex:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 25
        pageCount:
          type: integer
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    EventDetail:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        uid:
          type: string
        date:
          type: string
          format: date-time
        name:
          type: string
        shortName:
          type: string
        season:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        seasonType:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        week:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        timeValid:
          type: boolean
        competitions:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Reference'
              - type: object
                properties:
                  $ref:
                    type: string
                    format: uri
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        venues:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Reference'
              - type: object
                properties:
                  $ref:
                    type: string
                    format: uri
        league:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
      required:
        - id
        - date
        - competitions
        - venue
        - type
        - status
        - links

    DrivesListResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Drive'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    PlaysListResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Play'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    Drive:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        description:
          type: string
        sequenceNumber:
          type: string
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Team'
        endTeam:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Team'
        start:
          $ref: '#/components/schemas/DriveFieldPosition'
        end:
          $ref: '#/components/schemas/DriveFieldPosition'
        timeElapsed:
          $ref: '#/components/schemas/DriveTimeElapsed'
        yards:
          type: integer
        isScore:
          type: boolean
        offensivePlays:
          type: integer
        result:
          type: string
        shortDisplayResult:
          type: string
        displayResult:
          type: string
        source:
          $ref: '#/components/schemas/DriveSource'
        plays:
          $ref: '#/components/schemas/PlaysListResponse'

    DriveFieldPosition:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/DrivePeriod'
        clock:
          $ref: '#/components/schemas/DriveClock'
        yardLine:
          type: integer
        text:
          type: string

    DrivePeriod:
      type: object
      properties:
        type:
          type: string
        number:
          type: integer

    DriveClock:
      type: object
      properties:
        value:
          type: number
        displayValue:
          type: string

    DriveTimeElapsed:
      type: object
      properties:
        value:
          type: number
        displayValue:
          type: string

    DriveSource:
      type: object
      properties:
        id:
          type: string
        description:
          type: string

    Play:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        sequenceNumber:
          type: string
        type:
          $ref: '#/components/schemas/PlayType'
        text:
          type: string
        shortText:
          type: string
        alternativeText:
          type: string
        shortAlternativeText:
          type: string
        awayScore:
          type: integer
        homeScore:
          type: integer
        period:
          $ref: '#/components/schemas/PlayPeriod'
        clock:
          $ref: '#/components/schemas/PlayClock'
        scoringPlay:
          type: boolean
        priority:
          type: boolean
        scoreValue:
          type: integer
        modified:
          type: string
          format: date-time
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Team'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/PlayParticipant'
        probability:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        wallclock:
          type: string
          format: date-time
        drive:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - $ref: '#/components/schemas/Drive'
        start:
          $ref: '#/components/schemas/PlayFieldPosition'
        end:
          $ref: '#/components/schemas/PlayFieldPosition'
        statYardage:
          type: integer

    PlayType:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        abbreviation:
          type: string

    PlayPeriod:
      type: object
      properties:
        number:
          type: integer

    PlayClock:
      type: object
      properties:
        value:
          type: number
        displayValue:
          type: string

    PlayFieldPosition:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/PlayPeriod'
        clock:
          $ref: '#/components/schemas/PlayClock'
        yardLine:
          type: integer
        text:
          type: string

    PlayParticipant:
      type: object
      properties:
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        position:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        statistics:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        stats:
          type: array
          items:
            $ref: '#/components/schemas/PlayStat'
        order:
          type: integer
        type:
          type: string

    PlayStat:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        shortDisplayName:
          type: string
        description:
          type: string
        abbreviation:
          type: string
        value:
          type: number
        displayValue:
          type: string

    NflLeadersResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/leaders/0?lang=en&region=us"
        id:
          type: string
          example: "0"
        name:
          type: string
          example: "TOTAL"
        abbreviation:
          type: string
          example: "Any"
        type:
          type: string
          example: "total"
        categories:
          type: array
          items:
            $ref: '#/components/schemas/NflLeadersCategory'
      required:
        - $ref
        - id
        - name
        - abbreviation
        - type
        - categories

    NflLeadersCategory:
      type: object
      properties:
        name:
          type: string
          example: "totalPoints"
        displayName:
          type: string
          example: "Total Points"
        shortDisplayName:
          type: string
          example: "TP"
        abbreviation:
          type: string
          example: "TP"
        leaders:
          type: array
          items:
            $ref: '#/components/schemas/NflLeader'
      required:
        - name
        - displayName
        - shortDisplayName
        - abbreviation
        - leaders

    NflLeader:
      type: object
      properties:
        displayValue:
          type: string
          example: "2673"
        value:
          type: number
          example: 2673.0
        rel:
          type: array
          items:
            type: string
            example: "athlete"
        athlete:
          $ref: '#/components/schemas/Reference'
        statistics:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
      required:
        - displayValue
        - value
        - rel
        - athlete
        - statistics

    CoreNflSeasonTeamResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        guid:
          type: string
        uid:
          type: string
        alternateIds:
          $ref: '#/components/schemas/AlternateIDS'
        slug:
          type: string
        location:
          type: string
        name:
          type: string
        nickname:
          type: string
        abbreviation:
          type: string
        displayName:
          type: string
        shortDisplayName:
          type: string
        color:
          type: string
        alternateColor:
          type: string
        isActive:
          type: boolean
        isAllStar:
          type: boolean
        logos:
          type: array
          items:
            $ref: '#/components/schemas/Logo'
        record:
          $ref: '#/components/schemas/Reference'
          nullable: true
        oddsRecords:
          $ref: '#/components/schemas/Reference'
          nullable: true
        athletes:
          $ref: '#/components/schemas/Reference'
          nullable: true
        venue:
          $ref: '#/components/schemas/Venue'
          nullable: true
        groups:
          $ref: '#/components/schemas/Reference'
          nullable: true
        ranks:
          $ref: '#/components/schemas/Reference'
          nullable: true
        statistics:
          $ref: '#/components/schemas/Reference'
          nullable: true
        leaders:
          $ref: '#/components/schemas/Reference'
          nullable: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        injuries:
          $ref: '#/components/schemas/Reference'
          nullable: true
        notes:
          $ref: '#/components/schemas/Reference'
          nullable: true
        againstTheSpreadRecords:
          $ref: '#/components/schemas/Reference'
          nullable: true
        franchise:
          $ref: '#/components/schemas/Reference'
          nullable: true
        projection:
          $ref: '#/components/schemas/Reference'
          nullable: true
        events:
          $ref: '#/components/schemas/Reference'
          nullable: true
        transactions:
          $ref: '#/components/schemas/Reference'
          nullable: true
        coaches:
          $ref: '#/components/schemas/Reference'
          nullable: true
        attendance:
          $ref: '#/components/schemas/Reference'
          nullable: true
      required:
        - $ref
        - id
        - guid
        - uid
        - alternateIds
        - slug
        - location
        - name
        - nickname
        - abbreviation
        - displayName
        - shortDisplayName
        - color
        - alternateColor
        - isActive
        - isAllStar
        - logos
        - links

    AlternateIDS:
      type: object
      properties:
        sdr:
          type: string
      required:
        - sdr

    Venue:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        fullName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        grass:
          type: boolean
        indoor:
          type: boolean
        images:
          type: array
          items:
            $ref: '#/components/schemas/Logo'
      required:
        - $ref
        - id
        - fullName
        - address
        - grass
        - indoor
        - images

    Address:
      type: object
      properties:
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
      required:
        - city
        - state
        - zipCode
        - country

    Logo:
      type: object
      properties:
        href:
          type: string
          format: uri
        width:
          type: integer
        height:
          type: integer
        alt:
          type: string
        rel:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date-time
      required:
        - href
        - width
        - height
        - alt
        - rel

    NflAthleteInjury:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        longComment:
          type: string
        shortComment:
          type: string
        status:
          type: string
        date:
          type: string
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        source:
          type: object
          properties:
            id:
              type: string
            description:
              type: string
            state:
              type: string
          required:
            - id
            - description
            - state
        type:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            abbreviation:
              type: string
          required:
            - id
            - name
            - description
            - abbreviation
      required:
        - $ref
        - id
        - longComment
        - shortComment
        - status
        - date
        - athlete
        - team
        - source
        - type
      description: Detailed NFL athlete injury object 

    NflDraftResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        uid:
          type: string
        year:
          type: integer
        numberOfRounds:
          type: integer
        displayName:
          type: string
        shortDisplayName:
          type: string
        status:
          $ref: '#/components/schemas/NflDraftRound'
        athletes:
          $ref: '#/components/schemas/NflDraftRound'
        rounds:
          $ref: '#/components/schemas/NflDraftRound'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftPosition'
        needs:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftTeamNeed'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      required:
        - $ref
        - uid
        - year
        - numberOfRounds
        - displayName
        - shortDisplayName
        - status
        - athletes
        - rounds
        - positions
        - needs
        - links

    NflDraftRound:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    NflDraftTeam:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    DraftAthleteResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        guid:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        shortName:
          type: string
        weight:
          type: number
        displayWeight:
          type: string
        height:
          type: number
        displayHeight:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        college:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        position:
          $ref: '#/components/schemas/Position'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/DraftAthleteAttribute'
        analysis:
          type: array
          items:
            $ref: '#/components/schemas/DraftAthleteAnalysis'
        pick:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        logo:
          $ref: '#/components/schemas/Logo'
        headshot:
          $ref: '#/components/schemas/DraftAthleteHeadshot'
        leagueAffiliation:
          type: string
      required:
        - $ref
        - id
        - guid
        - firstName
        - lastName
        - fullName
        - displayName
        - shortName
        - weight
        - displayWeight
        - height
        - displayHeight
        - links
        - position
        - positions
        - attributes
        - analysis
        - pick
        - athlete
        - logo

    DraftAthleteAttribute:
      type: object
      properties:
        type:
          type: integer
        name:
          type: string
        displayName:
          type: string
        abbreviation:
          type: string
        value:
          type: number
        displayValue:
          type: string
      required:
        - type
        - name
        - displayName
        - abbreviation
        - value
        - displayValue

    DraftAthleteAnalysis:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        text:
          type: string
        grade:
          type: integer
      required:
        - id
        - type

    DraftAthleteHeadshot:
      type: object
      properties:
        href:
          type: string
          format: uri
      required:
        - href

    NflDraftAthleteResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        guid:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        shortName:
          type: string
        weight:
          type: number
        displayWeight:
          type: string
        height:
          type: number
        displayHeight:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        college:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        position:
          $ref: '#/components/schemas/Position'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftAthleteAttribute'
        analysis:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftAthleteAnalysis'
        pick:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
        logo:
          $ref: '#/components/schemas/Logo'
      required:
        - $ref
        - id
        - guid
        - firstName
        - lastName
        - fullName
        - displayName
        - shortName
        - weight
        - displayWeight
        - height
        - displayHeight
        - links
        - college
        - position
        - positions
        - team
        - attributes
        - analysis
        - pick
        - athlete
        - logo

    NflDraftAthleteAttribute:
      type: object
      properties:
        type:
          type: integer
        name:
          type: string
        displayName:
          type: string
        abbreviation:
          type: string
        value:
          type: number
        displayValue:
          type: string
      required:
        - type
        - name
        - displayName
        - abbreviation
        - value
        - displayValue

    NflDraftAthleteAnalysis:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        text:
          type: string
        grade:
          type: integer
      required:
        - id
        - type

    NflDraftRoundsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftRoundDetail'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    NflDraftRoundDetail:
      type: object
      properties:
        number:
          type: integer
        displayName:
          type: string
        shortDisplayName:
          type: string
        picks:
          type: array
          items:
            $ref: '#/components/schemas/NflDraftPick'
        status:
          $ref: '#/components/schemas/NflDraftRoundStatus'
      required:
        - number
        - displayName
        - shortDisplayName
        - picks
        - status

    NflDraftPick:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/NflDraftPickStatus'
        pick:
          type: integer
        overall:
          type: integer
        round:
          type: integer
        traded:
          type: boolean
        tradeNote:
          type: string
          nullable: true
        athlete:
          oneOf:
            - $ref: '#/components/schemas/Reference'
          description: Reference to the athlete object
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
          description: Reference to the team object
      required:
        - status
        - pick
        - overall
        - round
        - traded
        - athlete
        - team

    NflDraftPickStatus:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        state:
          type: string
          nullable: true
      required:
        - id
        - name
        - description

    NflDraftRoundStatus:
      type: object
      properties:
        round:
          type: integer
        type:
          $ref: '#/components/schemas/NflDraftPickStatus'
      required:
        - round
        - type

    NflDraftPosition:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        abbreviation:
          type: string
        leaf:
          type: boolean
        parent:
          oneOf:
            - $ref: '#/components/schemas/Reference'
      required:
        - $ref
        - id
        - name
        - displayName
        - abbreviation
        - leaf
        - parent 

    NflTeamDepthchartResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/NflTeamDepthchartGroup'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items 

    NflTeamDepthchartGroup:
      type: object
      properties:
        name:
          type: string
        positions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NflTeamDepthchartPosition'
      required:
        - name
        - positions 

    NflTeamDepthchartPosition:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/Position'
        athletes:
          type: array
          items:
            $ref: '#/components/schemas/NflTeamDepthchartAthlete'
      required:
        - position
        - athletes 

    NflTeamDepthchartAthlete:
      type: object
      properties:
        rank:
          type: integer
        slot:
          type: integer
        athlete:
          $ref: '#/components/schemas/Reference'
      required:
        - rank
        - slot
        - athlete 

    NflDraftTeamNeed:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/Reference'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - team
        - positions

    NflAthleteEventlogResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        teams:
          type: object
          additionalProperties:
            type: object
            properties:
              team:
                oneOf:
                  - $ref: '#/components/schemas/Reference'
              id:
                type: string
            required:
              - id
              - team
        events:
          type: object
          properties:
            count:
              type: integer
            pageIndex:
              type: integer
            pageSize:
              type: integer
            pageCount:
              type: integer
            items:
              type: array
              items:
                type: object
                properties:
                  event:
                    oneOf:
                      - $ref: '#/components/schemas/Reference'
                  competition:
                    oneOf:
                      - $ref: '#/components/schemas/Reference'
                  statistics:
                    oneOf:
                      - $ref: '#/components/schemas/Reference'
                  teamId:
                    type: string
                  played:
                    type: boolean
                required:
                  - event
                  - competition
                  - teamId
                  - played
          required:
            - count
            - pageIndex
            - pageSize
            - pageCount
            - items
      required:
        - $ref
        - teams
        - events
      description: NFL athlete event log response object. 

    NflConferenceStandingsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/NflConferenceStandingsItem'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items
      description: NFL Conference Standings response object.

    NflConferenceStandingsItem:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      required:
        - $ref
        - id
        - name
        - displayName
        - links
      description: Item in NFL Conference Standings response. 

    SportEnum:
      type: string
      description: Common sport identifiers used in ESPN APIs.
      enum:
        - football
        - basketball
        - baseball
        - hockey
        - soccer
        - golf
        - racing
        - tennis
    LeagueEnum:
      type: string
      description: Common league identifiers used in ESPN APIs.
      enum:
        - nfl
        - mlb
        - nba
        - nhl
        - wnba
        - mens-college-basketball
        - womens-college-basketball
        - college-football
        - college-baseball
        - pga
        - lpga
        - f1
        - nascar-premier
        - atp
        - wta
        - mls
        - epl
        - laliga
        - bundesliga
        - serie-a
        - ligue-1
        - ucl
        - europa-league
        - other
        - uefa.champions
        - uefa.europa
        - uefa.europa.conf
        - esp.copa_del_rey
        - eng.fa
        - eng.1
        - esp.1
        - ger.1
        - ger.dfb_pokal
        - usa.1
        - concacaf.champions
        - usa.nwsl.cup
        - usa.nwsl
        - mex.1
        - eng.2
        - ita.coppa_italia
        - eng.w.1
        - por.1

    CompetitionDetail:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        guid:
          type: string
        uid:
          type: string
        date:
          type: string
        attendance:
          type: integer
        type:
          $ref: '#/components/schemas/CompetitionType'
        timeValid:
          type: boolean
        dateValid:
          type: boolean
        neutralSite:
          type: boolean
        divisionCompetition:
          type: boolean
        conferenceCompetition:
          type: boolean
        previewAvailable:
          type: boolean
        recapAvailable:
          type: boolean
        boxscoreAvailable:
          type: boolean
        lineupAvailable:
          type: boolean
        gamecastAvailable:
          type: boolean
        playByPlayAvailable:
          type: boolean
        conversationAvailable:
          type: boolean
        commentaryAvailable:
          type: boolean
        pickcenterAvailable:
          type: boolean
        summaryAvailable:
          type: boolean
        liveAvailable:
          type: boolean
        ticketsAvailable:
          type: boolean
        shotChartAvailable:
          type: boolean
        timeoutsAvailable:
          type: boolean
        possessionArrowAvailable:
          type: boolean
        onWatchESPN:
          type: boolean
        recent:
          type: boolean
        bracketAvailable:
          type: boolean
        wallclockAvailable:
          type: boolean
        highlightsAvailable:
          type: boolean
        gameSource:
          $ref: '#/components/schemas/CompetitionSource'
        boxscoreSource:
          $ref: '#/components/schemas/CompetitionSource'
        playByPlaySource:
          $ref: '#/components/schemas/CompetitionSource'
        linescoreSource:
          $ref: '#/components/schemas/CompetitionSource'
        statsSource:
          $ref: '#/components/schemas/CompetitionSource'
        venue:
          oneOf:
            - $ref: '#/components/schemas/Venue'
            - $ref: '#/components/schemas/Reference'
        competitors:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/CompetitionCompetitor'
              - $ref: '#/components/schemas/Reference'
        notes:
          type: array
          items:
            type: object
        situation:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        status:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        odds:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        broadcasts:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        officials:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        details:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        leaders:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        predictor:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        probabilities:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        powerIndexes:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        format:
          $ref: '#/components/schemas/CompetitionFormat'
        drives:
          oneOf:
            - $ref: '#/components/schemas/CompetitionBroadcast'
            - $ref: '#/components/schemas/Reference'
        hasDefensiveStats:
          type: boolean
      required:
        - $ref
        - id
        - date
        - competitors
        - venue
        - type
        - status
        - links

    CompetitionType:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        abbreviation:
          type: string
        slug:
          type: string
        type:
          type: string
      required:
        - id
        - text
        - abbreviation
        - slug
        - type

    CompetitionSource:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        state:
          type: string
      required:
        - id
        - description
        - state

    CompetitionFormat:
      type: object
      properties:
        regulation:
          $ref: '#/components/schemas/CompetitionOvertime'
        overtime:
          $ref: '#/components/schemas/CompetitionOvertime'
      required:
        - regulation
        - overtime

    CompetitionOvertime:
      type: object
      properties:
        periods:
          type: integer
        displayName:
          type: string
        slug:
          type: string
        clock:
          type: integer
      required:
        - periods
        - displayName
        - slug
        - clock

    CompetitionBroadcast:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    CompetitionCompetitor:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        uid:
          type: string
        type:
          type: string
        order:
          type: integer
        homeAway:
          type: string
        winner:
          type: boolean
        team:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        score:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        linescores:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        roster:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        statistics:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        leaders:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
        record:
          oneOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              properties:
                $ref:
                  type: string
                  format: uri
      required:
        - $ref
        - id
        - uid
        - type
        - order
        - homeAway
        - winner
        - team
        - score
        - linescores
        - roster
        - statistics
        - leaders
        - record

    CompetitionSituationResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        lastPlay:
          $ref: '#/components/schemas/LastPlayReference'
        down:
          type: integer
        yardLine:
          type: integer
        distance:
          type: integer
        isRedZone:
          type: boolean
        homeTimeouts:
          type: integer
        awayTimeouts:
          type: integer
      required:
        - $ref
        - lastPlay
        - down
        - yardLine
        - distance
        - isRedZone
        - homeTimeouts
        - awayTimeouts

    LastPlayReference:
      type: object
      properties:
        $ref:
          type: string
          format: uri
      required:
        - $ref

    CompetitionStatus:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        clock:
          type: number
        displayClock:
          type: string
        period:
          type: integer
        type:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            state:
              type: string
            completed:
              type: boolean
            description:
              type: string
            detail:
              type: string
            shortDetail:
              type: string
          required:
            - id
            - name
            - state
            - completed
            - description
            - detail
            - shortDetail
      required:
        - $ref
        - clock
        - displayClock
        - period
        - type
      description: Competition status object (clock, period, state, etc) for a specific competition (game).

    OddsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/OddsItem'
      required:
        - count
        - items
        - pageCount
        - pageIndex
        - pageSize

    OddsItem:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        provider:
          $ref: '#/components/schemas/OddsProvider'
        bettingOdds:
          $ref: '#/components/schemas/BettingOdds'
        moneylineWinner:
          type: boolean
        spreadWinner:
          type: boolean
        details:
          type: string
        overUnder:
          type: number
        spread:
          type: number
        overOdds:
          type: number
        underOdds:
          type: number
        awayTeamOdds:
          $ref: '#/components/schemas/TeamOdds'
        homeTeamOdds:
          $ref: '#/components/schemas/TeamOdds'
        current:
          $ref: '#/components/schemas/OddsItemCurrent'
        open:
          $ref: '#/components/schemas/OddsItemCurrent'
        close:
          $ref: '#/components/schemas/OddsItemCurrent'
        headToHeads:
          $ref: '#/components/schemas/HeadToHeads'
        predictors:
          $ref: '#/components/schemas/HeadToHeads'
        moneyLineHistory:
          $ref: '#/components/schemas/HeadToHeads'
        spreadHistory:
          $ref: '#/components/schemas/HeadToHeads'
        totalHistory:
          $ref: '#/components/schemas/HeadToHeads'
      required:
        - $ref
        - moneylineWinner
        - provider
        - spreadWinner

    OddsProvider:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        priority:
          type: integer
      required:
        - $ref
        - id
        - name
        - priority

    BettingOdds:
      type: object
      properties:
        homeTeam:
          $ref: '#/components/schemas/Reference'
        awayTeam:
          $ref: '#/components/schemas/Reference'
        teamOdds:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/OddsDetail'
        preMatchMoneyLineAway:
          $ref: '#/components/schemas/OddsDetail'
        preMatchMoneyLineHome:
          $ref: '#/components/schemas/OddsDetail'
        preMatchSpreadHandicapAway:
          $ref: '#/components/schemas/OddsDetail'
        preMatchSpreadHome:
          $ref: '#/components/schemas/OddsDetail'
      required:
        - homeTeam
        - awayTeam
        - teamOdds

    OddsDetail:
      type: object
      properties:
        oddId:
          type: string
        value:
          type: string
        betSlipUrl:
          type: string
      required:
        - oddId
        - value
        - betSlipUrl

    TeamOdds:
      type: object
      properties:
        favorite:
          type: boolean
        underdog:
          type: boolean
        moneyLine:
          type: integer
        spreadOdds:
          type: number
        current:
          $ref: '#/components/schemas/OddsTeamCurrent'
        open:
          $ref: '#/components/schemas/OddsTeamCurrent'
        close:
          $ref: '#/components/schemas/OddsTeamCurrent'
        team:
          $ref: '#/components/schemas/HeadToHeads'
        winPercentage:
          type: number
        averageScore:
          type: number
        moneyLineOdds:
          type: number
        moneyLineReturn:
          type: number
        similarities:
          $ref: '#/components/schemas/HeadToHeads'
        spreadReturn:
          type: number
        spreadRecord:
          $ref: '#/components/schemas/SpreadRecord'
        pastPerformances:
          $ref: '#/components/schemas/HeadToHeads'
      required:
        - current
        - favorite
        - team
        - underdog

    OddsTeamCurrent:
      type: object
      properties:
        pointSpread:
          $ref: '#/components/schemas/OddsValue'
        spread:
          $ref: '#/components/schemas/OddsValue'
        moneyLine:
          $ref: '#/components/schemas/OddsValue'

    OddsValue:
      type: object
      properties:
        value:
          type: number
        displayValue:
          type: string
        alternateDisplayValue:
          type: string
        decimal:
          type: number
        fraction:
          type: string
        american:
          type: string
      required:
        - alternateDisplayValue
        - american

    OddsItemCurrent:
      type: object
      properties:
        over:
          $ref: '#/components/schemas/OddsValueWithOutcome'
        under:
          $ref: '#/components/schemas/OddsValueWithOutcome'
        total:
          $ref: '#/components/schemas/OddsValue'

    OddsValueWithOutcome:
      allOf:
        - $ref: '#/components/schemas/OddsValue'
        - type: object
          properties:
            outcome:
              type: object
              properties:
                type:
                  type: string
                  enum: ['pending', 'won', 'lost']

    HeadToHeads:
      type: object
      properties:
        $ref:
          type: string
          format: uri

    SpreadRecord:
      type: object
      properties:
        wins:
          type: integer
        losses:
          type: integer
        pushes:
          type: integer
        summary:
          type: string
      required:
        - wins
        - losses
        - pushes
        - summary

    CompetitionBroadcastsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionBroadcastItem'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    CompetitionBroadcastItem:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BroadcastType'
        channel:
          type: integer
        station:
          type: string
        slug:
          type: string
        priority:
          type: integer
        market:
          $ref: '#/components/schemas/BroadcastMarket'
        media:
          $ref: '#/components/schemas/BroadcastMedia'
        lang:
          type: string
        region:
          type: string
        competition:
          $ref: '#/components/schemas/Reference'
        partnered:
          type: boolean
      required:
        - type
        - channel
        - station
        - slug
        - priority
        - market
        - media
        - lang
        - region
        - competition
        - partnered

    BroadcastType:
      type: object
      properties:
        id:
          type: string
        shortName:
          type: string
        longName:
          type: string
        slug:
          type: string
      required:
        - id
        - shortName
        - longName
        - slug

    BroadcastMarket:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
      required:
        - id
        - type

    BroadcastMedia:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        callLetters:
          type: string
        name:
          type: string
        shortName:
          type: string
        slug:
          type: string
        logos:
          type: array
          items:
            $ref: '#/components/schemas/BroadcastLogo'
      required:
        - $ref
        - id
        - callLetters
        - name
        - shortName
        - slug
        - logos

    BroadcastLogo:
      type: object
      properties:
        href:
          type: string
          format: uri
        width:
          type: integer
        height:
          type: integer
        alt:
          type: string
        rel:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
      required:
        - href
        - width
        - height
        - alt
        - rel

    CompetitionOfficialsResponse:
      type: object
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionOfficialItem'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    CompetitionOfficialItem:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        position:
          $ref: '#/components/schemas/OfficialPosition'
        order:
          type: integer
      required:
        - $ref
        - id
        - firstName
        - lastName
        - fullName
        - displayName
        - position
        - order

    OfficialPosition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
      required:
        - id
        - name
        - displayName

    CompetitionLeadersResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        type:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionLeadersCategory'
      required:
        - $ref
        - id
        - name
        - abbreviation
        - type
        - categories

    CompetitionLeadersCategory:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        shortDisplayName:
          type: string
        abbreviation:
          type: string
        leaders:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionLeader'
      required:
        - name
        - displayName
        - shortDisplayName
        - abbreviation
        - leaders

    CompetitionLeader:
      type: object
      properties:
        displayValue:
          type: string
        value:
          type: number
        rel:
          type: array
          items:
            type: string
        athlete:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
        statistics:
          $ref: '#/components/schemas/Reference'
      required:
        - displayValue
        - value
        - rel
        - athlete
        - statistics
        - team

    CompetitionAthleteStatisticsResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
        competition:
          $ref: '#/components/schemas/Reference'
        splits:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            abbreviation:
              type: string
            categories:
              type: array
              items:
                $ref: '#/components/schemas/StatisticCategory'
          required:
            - id
            - name
            - abbreviation
            - categories
        athlete:
          $ref: '#/components/schemas/Reference'
      required:
        - $ref
        - competition
        - splits
        - athlete
      description: Statistics for a specific athlete in a competition (game).

    MlbAthleteDetailsResponse:
      type: object
      required:
        - $ref
        - active
        - age
        - alternateIds
        - awards
        - bats
        - birthPlace
        - college
        - contracts
        - dateOfBirth
        - debut
        - debutYear
        - displayHeight
        - displayName
        - displayWeight
        - draft
        - experience
        - firstName
        - fullName
        - guid
        - headshot
        - height
        - id
        - jersey
        - lastName
        - linked
        - links
        - nickname
        - position
        - shortName
        - slug
        - statistics
        - statisticslog
        - status
        - team
        - throws
        - type
        - uid
        - weight
      properties:
        $ref:
          type: string
          format: uri
        id:
          type: string
        uid:
          type: string
        guid:
          type: string
          format: uuid
        type:
          type: string
        alternateIds:
          type: object
          properties:
            sdr:
              type: string
          required:
            - sdr
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        displayName:
          type: string
        nickname:
          type: string
        shortName:
          type: string
        weight:
          type: number
        displayWeight:
          type: string
        height:
          type: number
        displayHeight:
          type: string
        age:
          type: integer
        dateOfBirth:
          type: string
        debutYear:
          type: integer
        links:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                format: uri
        birthPlace:
          type: object
          properties:
            city:
              type: string
            state:
              type: string
            country:
              type: string
        college:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        slug:
          type: string
        headshot:
          type: object
          properties:
            href:
              type: string
              format: uri
        jersey:
          type: string
        position:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        linked:
          type: boolean
        team:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        statistics:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        contracts:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        experience:
          type: object
          properties:
            years:
              type: integer
            displayValue:
              type: string
        debut:
          type: object
          properties:
            year:
              type: integer
            date:
              type: string
        active:
          type: boolean
        draft:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        status:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        statisticslog:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        awards:
          type: object
          properties:
            $ref:
              type: string
              format: uri
        bats:
          type: object
          properties:
            code:
              type: string
            abbreviation:
              type: string
            displayValue:
              type: string
        throws:
          type: object
          properties:
            code:
              type: string
            abbreviation:
              type: string
            displayValue:
              type: string

    PositionsListResponse:
      type: object
      required:
        - count
        - items
        - pageCount
        - pageIndex
        - pageSize
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      description: Paginated list of player positions for a given sport and league.
    
    TransactionsListResponse:
      type: object
      required:
        - count
        - items
        - pageCount
        - pageIndex
        - pageSize
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            type: object
            description: "Transaction object (structure may vary by sport/league, currently empty for NFL)"
      description: Paginated list of transactions for a given sport and league.

    StatCorrectionsResponse:
      type: object
      required:
        - count
        - items
        - pageCount
        - pageIndex
        - pageSize
      properties:
        count:
          type: integer
        pageIndex:
          type: integer
        pageSize:
          type: integer
        pageCount:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/StatCorrection'
      description: Paginated list of statistical corrections for a given sport, league, season, and season type.

    StatCorrection:
      type: object
      required:
        - splitStats
        - competition
        - athlete
        - team
      properties:
        splitStats:
          $ref: '#/components/schemas/SplitStats'
        competition:
          $ref: '#/components/schemas/Reference'
        athlete:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
      description: A statistical correction record for an athlete in a specific competition.

    SplitStats:
      type: object
      required:
        - id
        - name
        - abbreviation
        - categories
      properties:
        id:
          type: string
          description: The split stats identifier
        name:
          type: string
          description: The name of the split stats type
          example: "statCorrection"
        abbreviation:
          type: string
          description: The abbreviation for the split stats type
          example: "Stat Correction"
        categories:
          type: array
          items:
            $ref: '#/components/schemas/StatCategory'
      description: Statistical split information containing categories of stats.

    StatCategory:
      type: object
      required:
        - name
        - displayName
        - shortDisplayName
        - abbreviation
        - summary
        - stats
      properties:
        name:
          type: string
          description: The category name
          example: "defensive"
        displayName:
          type: string
          description: The display name for the category
          example: "Defense"
        shortDisplayName:
          type: string
          description: The short display name for the category
          example: "Defensive"
        abbreviation:
          type: string
          description: The abbreviation for the category
          example: "def"
        summary:
          type: string
          description: Summary information for the category
        stats:
          type: array
          items:
            $ref: '#/components/schemas/StatItem'
      description: A category of statistics within a split stats object.

    StatItem:
      type: object
      required:
        - name
        - displayName
        - shortDisplayName
        - description
        - abbreviation
        - value
        - displayValue
      properties:
        name:
          type: string
          description: The stat name
          example: "soloTackles"
        displayName:
          type: string
          description: The display name for the stat
          example: "Solo Tackles"
        shortDisplayName:
          type: string
          description: The short display name for the stat
          example: "SOLO"
        description:
          type: string
          description: Description of what the stat represents
          example: "The number of times a tackle was made unassisted."
        abbreviation:
          type: string
          description: The abbreviation for the stat
          example: "SOLO"
        value:
          type: number
          description: The numeric value of the stat correction (can be negative)
          example: -1
        displayValue:
          type: string
          description: The display value of the stat correction
          example: "-1"
      description: An individual statistical item within a category.

    GroupDetailsResponse:
      type: object
      required:
        - $ref
        - uid
        - id
        - name
        - abbreviation
        - season
        - children
        - parent
        - standings
        - isConference
        - slug
        - teams
      properties:
        $ref:
          type: string
          format: uri
          description: Reference URL to this group resource
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/seasons/2024/types/2/groups/7?lang=en&region=us"
        uid:
          type: string
          description: Unique identifier for the group
          example: "s:20~l:28~g:7"
        id:
          type: string
          description: The group ID
          example: "7"
        name:
          type: string
          description: The full name of the group
          example: "National Football Conference"
        abbreviation:
          type: string
          description: The abbreviated name of the group
          example: "NFC"
        season:
          $ref: '#/components/schemas/Reference'
        children:
          $ref: '#/components/schemas/Reference'
        parent:
          $ref: '#/components/schemas/Reference'
        standings:
          $ref: '#/components/schemas/Reference'
        isConference:
          type: boolean
          description: Whether this group represents a conference
          example: true
        slug:
          type: string
          description: URL-friendly slug for the group
          example: "national-football-conference"
        teams:
          $ref: '#/components/schemas/Reference'
      description: Detailed information about a specific group (conference/division) in a league season.

    ProbabilitiesListResponse:
      type: object
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items
      properties:
        count:
          type: integer
          description: Total number of probability entries
          example: 187
        pageIndex:
          type: integer
          description: Current page index
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 25
        pageCount:
          type: integer
          description: Total number of pages
          example: 8
        items:
          type: array
          description: List of probability entries for each play
          items:
            $ref: '#/components/schemas/ProbabilityItem'

    ProbabilityItem:
      type: object
      required:
        - $ref
        - competition
        - play
        - homeTeam
        - awayTeam
        - tiePercentage
        - homeWinPercentage
        - awayWinPercentage
        - lastModified
        - sequenceNumber
        - source
      properties:
        $ref:
          type: string
          format: uri
          description: Reference URL to this probability entry
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/events/401547417/competitions/401547417/probabilities/4015474171?lang=en&region=us"
        competition:
          $ref: '#/components/schemas/Reference'
        play:
          $ref: '#/components/schemas/Reference'
        homeTeam:
          $ref: '#/components/schemas/Reference'
        awayTeam:
          $ref: '#/components/schemas/Reference'
        tiePercentage:
          type: number
          description: Probability of the game ending in a tie (0 for sports without ties)
          example: 0
        homeWinPercentage:
          type: number
          description: Probability of the home team winning (0-1)
          example: 0.5168
        awayWinPercentage:
          type: number
          description: Probability of the away team winning (0-1)
          example: 0.4832
        lastModified:
          type: string
          format: date-time
          description: When this probability was last updated
          example: "2023-09-17T22:24Z"
        sequenceNumber:
          type: string
          description: Sequence number for ordering probabilities
          example: "100"
        source:
          $ref: '#/components/schemas/ProbabilitySource'
        secondsLeft:
          type: integer
          description: Seconds remaining in the game (optional, may not be present for all sports)
          example: 0

    ProbabilitySource:
      type: object
      required:
        - id
        - description
        - state
      properties:
        id:
          type: string
          description: Source identifier
          example: "2"
        description:
          type: string
          description: Source description
          example: "feed"
        state:
          type: string
          description: Source state
          example: "full"

    NewsResponse:
      type: object
      required:
        - headlines
        - resultsCount
        - resultsLimit
        - resultsOffset
        - status
        - timestamp
      properties:
        headlines:
          type: array
          items:
            $ref: '#/components/schemas/NewsHeadline'
        resultsCount:
          type: integer
          description: Total number of results available
        resultsLimit:
          type: integer
          description: Maximum number of results returned
        resultsOffset:
          type: integer
          description: Offset for pagination
        status:
          type: string
          description: Response status
          example: "success"
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the response

    NewsHeadline:
      type: object
      required:
        - id
        - headline
        - type
      properties:
        id:
          type: integer
          description: Unique identifier for the headline
        headline:
          type: string
          description: The headline text
        title:
          type: string
          description: The article title
        description:
          type: string
          description: Brief description of the article
        type:
          type: string
          description: Type of content
          example: "story"
        published:
          type: string
          format: date-time
          description: Publication date
        lastModified:
          type: string
          format: date-time
          description: Last modification date
        originallyPosted:
          type: string
          format: date-time
          description: Original posting date
        premium:
          type: boolean
          description: Whether this is premium content
        links:
          $ref: '#/components/schemas/NewsLinks'
        images:
          type: array
          items:
            $ref: '#/components/schemas/NewsImage'
        video:
          type: array
          items:
            $ref: '#/components/schemas/NewsVideo'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/NewsCategory'
        related:
          type: array
          items:
            $ref: '#/components/schemas/NewsRelated'
        keywords:
          type: array
          items:
            type: string
        allowSearch:
          type: boolean
        allowAMP:
          type: boolean
        allowAds:
          type: boolean
        allowComments:
          type: boolean
        allowCommerce:
          type: boolean
        allowContentReactions:
          type: boolean
        linkText:
          type: string
        source:
          type: string
        nowId:
          type: string
        dataSourceIdentifier:
          type: string
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/NewsMetric'
        story:
          type: string
          description: Full story text

    NewsLinks:
      type: object
      properties:
        api:
          $ref: '#/components/schemas/NewsLinkApi'
        web:
          $ref: '#/components/schemas/NewsLinkWeb'
        mobile:
          $ref: '#/components/schemas/NewsLinkMobile'
        amp:
          $ref: '#/components/schemas/NewsLinkAmp'

    NewsLinkApi:
      type: object
      properties:
        news:
          $ref: '#/components/schemas/NewsLinkItem'
        self:
          $ref: '#/components/schemas/NewsLinkItem'

    NewsLinkWeb:
      type: object
      properties:
        href:
          type: string
          format: uri
        short:
          $ref: '#/components/schemas/NewsLinkItem'
        self:
          $ref: '#/components/schemas/NewsLinkItem'

    NewsLinkMobile:
      type: object
      properties:
        href:
          type: string
          format: uri
        alert:
          $ref: '#/components/schemas/NewsLinkItem'

    NewsLinkAmp:
      type: object
      properties:
        href:
          type: string
          format: uri

    NewsLinkItem:
      type: object
      properties:
        href:
          type: string
          format: uri

    NewsImage:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        alt:
          type: string
        caption:
          type: string
        credit:
          type: string
        width:
          type: integer
        height:
          type: integer
        type:
          type: string

    NewsVideo:
      type: object
      properties:
        id:
          type: integer
        source:
          type: string
        headline:
          type: string
        caption:
          type: string
        description:
          type: string
        premium:
          type: boolean
        ad:
          type: object
          properties:
            sport:
              type: string
            bundle:
              type: string
        duration:
          type: integer
        thumbnail:
          type: string
          format: uri
        links:
          type: object
          properties:
            web:
              $ref: '#/components/schemas/NewsLinkItem'
            mobile:
              $ref: '#/components/schemas/NewsLinkItem'
            api:
              $ref: '#/components/schemas/NewsLinkItem'

    NewsCategory:
      type: object
      properties:
        id:
          type: integer
        uid:
          type: string
        type:
          type: string
        description:
          type: string
        sportId:
          type: integer
        leagueId:
          type: integer
        teamId:
          type: integer
        athleteId:
          type: integer

    NewsRelated:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        links:
          type: object
          properties:
            web:
              $ref: '#/components/schemas/NewsLinkItem'
            mobile:
              $ref: '#/components/schemas/NewsLinkItem'
            api:
              $ref: '#/components/schemas/NewsLinkItem'

    NewsMetric:
      type: object
      properties:
        type:
          type: string
          description: Type of metric (e.g., views, fShares, tweets)
        count:
          type: integer
          description: Count for this metric

    CoachDetailsResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          example: "http://sports.core.api.espn.com/v2/sports/football/leagues/nfl/seasons/2024/coaches/17751?lang=en&region=us"
        id:
          type: string
          example: "17751"
        uid:
          type: string
          example: "s:20~l:28~co:17751"
        firstName:
          type: string
          example: "Jonathan"
        lastName:
          type: string
          example: "Gannon"
        dateOfBirth:
          type: string
          format: date-time
          example: "1983-04-04T08:00Z"
        birthPlace:
          type: object
          properties:
            city:
              type: string
              example: "Cleveland"
            state:
              type: string
              example: "Ohio"
            country:
              type: string
              example: "USA"
        college:
          $ref: '#/components/schemas/Reference'
        person:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
        experience:
          type: integer
          example: 1
        records:
          type: array
          items:
            type: object
            properties:
              team:
                $ref: '#/components/schemas/Reference'
              record:
                $ref: '#/components/schemas/Reference'
      required:
        - id
        - firstName
        - lastName

    FuturesResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of futures available
          example: 30
        pageIndex:
          type: integer
          description: Current page index
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 25
        pageCount:
          type: integer
          description: Total number of pages
          example: 2
        items:
          type: array
          items:
            $ref: '#/components/schemas/FutureItem'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items

    FutureItem:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          description: API reference URL for this future
        id:
          type: integer
          description: Unique identifier for this future
          example: 1200
        name:
          type: string
          description: Name of the future bet
          example: "Total Regular Season Passing Yards"
        displayName:
          type: string
          description: Display name of the future bet
          example: "Total Regular Season Passing Yards"
        type:
          type: string
          description: Type of future bet
          enum: [winLeague, winDivision, winConference, playerProp, teamProp]
          example: winDivision
        futures:
          type: array
          items:
            $ref: '#/components/schemas/FutureProvider'
      required:
        - id
        - name
        - futures

    FutureProvider:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/BettingProvider'
        books:
          type: array
          items:
            $ref: '#/components/schemas/FutureBook'
      required:
        - provider
        - books

    FutureBook:
      type: object
      properties:
        athlete:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
        value:
          type: string
          description: Betting odds value (e.g., "+135", "-120")
          example: "-135"
      required:
        - value

    BettingProvider:
      type: object
      properties:
        id:
          type: string
          description: Provider identifier
          example: "58"
        name:
          type: string
          description: Provider name
          example: "ESPN BET"
        active:
          type: integer
          description: Active status (1 = active)
          example: 1
        priority:
          type: integer
          description: Display priority
          example: 1
      required:
        - id
        - name

    PredictorResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          description: Reference URL to this predictor data
        name:
          type: string
          description: Full name of the game
          example: "Baltimore Ravens at Jacksonville Jaguars"
        shortName:
          type: string
          description: Short name of the game
          example: "BAL @ JAX"
        lastModified:
          type: string
          format: date-time
          description: Last modification timestamp
        homeTeam:
          $ref: '#/components/schemas/PredictorTeam'
        awayTeam:
          $ref: '#/components/schemas/PredictorTeam'
      required:
        - name
        - shortName
        - homeTeam
        - awayTeam

    PredictorTeam:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/Reference'
        statistics:
          type: array
          items:
            $ref: '#/components/schemas/PredictorStatistic'
      required:
        - team

    PredictorStatistic:
      type: object
      properties:
        name:
          type: string
          description: Statistic identifier
          example: "gameProjection"
        displayName:
          type: string
          description: Display name for the statistic
          example: "WIN PROB"
        shortDisplayName:
          type: string
          description: Short display name
          example: "GP"
        description:
          type: string
          description: Description of the statistic
          example: "Team's predicted win percentage in this game at time of given BPI run"
        abbreviation:
          type: string
          description: Abbreviation for the statistic
          example: "GP"
        value:
          type: number
          description: Numeric value of the statistic
          example: 63.552
        displayValue:
          type: string
          description: Display-formatted value
          example: "63.6"
      required:
        - name
        - value
        - displayValue
    
    TeamAttendanceResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          description: Reference URL for this attendance data
        id:
          type: string
          description: ID of the attendance record
        name:
          type: string
          description: Name of the attendance record
          example: "Attendance"
        abbreviation:
          type: string
          description: Abbreviation for attendance
          example: "ATTND"
        categories:
          type: array
          items:
            $ref: '#/components/schemas/AttendanceCategory'
      required:
        - $ref
        - id
        - name
        - abbreviation
        - categories
    
    AttendanceCategory:
      type: object
      properties:
        name:
          type: string
          description: Category name (home, away, all)
          example: "home"
        displayName:
          type: string
          description: Display name for the category
          example: "Home"
        shortDisplayName:
          type: string
          description: Short display name
          example: "Home"
        abbreviation:
          type: string
          description: Category abbreviation
          example: "home"
        stats:
          type: array
          items:
            $ref: '#/components/schemas/AttendanceStat'
      required:
        - name
        - displayName
        - stats
    
    AttendanceStat:
      type: object
      properties:
        name:
          type: string
          description: Stat name
          example: "games"
        displayName:
          type: string
          description: Display name for the stat
          example: "Home Games"
        shortDisplayName:
          type: string
          description: Short display name
          example: "GMS"
        description:
          type: string
          description: Description of the stat
          example: "The total amount of games played as home."
        abbreviation:
          type: string
          description: Stat abbreviation
          example: "GMS"
        value:
          type: number
          description: Numeric value of the stat
          example: 6.0
        displayValue:
          type: string
          description: Display-formatted value
          example: "6"
      required:
        - name
        - displayName
        - abbreviation
        - value
        - displayValue
    
    TeamLeadersResponse:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          description: Reference URL for this team leaders data
        id:
          type: string
          description: ID of the leaders record
        name:
          type: string
          description: Name of the leaders record
          example: "Leaders"
        abbreviation:
          type: string
          description: Abbreviation for leaders
          example: "LEAD"
        type:
          type: string
          description: Type of leaders data
          example: "team"
        categories:
          type: array
          items:
            $ref: '#/components/schemas/LeaderCategory'
      required:
        - $ref
        - id
        - name
        - categories
    
    LeaderCategory:
      type: object
      properties:
        name:
          type: string
          description: Category name (e.g., passingLeader, pointsPerGame)
          example: "passingLeader"
        displayName:
          type: string
          description: Display name for the category
          example: "Passing Leader"
        shortDisplayName:
          type: string
          description: Short display name
          example: "Pass"
        abbreviation:
          type: string
          description: Category abbreviation
          example: "PASS"
        leaders:
          type: array
          items:
            $ref: '#/components/schemas/TeamLeader'
      required:
        - name
        - displayName
        - leaders
    
    TeamLeader:
      type: object
      properties:
        displayValue:
          type: string
          description: Display-formatted value for the leader
          example: "282.9"
        value:
          type: number
          description: Numeric value for the leader statistic
          example: 282.9
        rel:
          type: array
          items:
            type: string
          description: Relationship types
          example: ["athlete"]
        athlete:
          $ref: '#/components/schemas/Reference'
        team:
          $ref: '#/components/schemas/Reference'
        statistics:
          $ref: '#/components/schemas/Reference'
      required:
        - displayValue
        - value
    
    TeamAtsRecordsResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of ATS record types
          example: 8
        pageIndex:
          type: integer
          description: Current page index (1-based)
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 25
        pageCount:
          type: integer
          description: Total number of pages
          example: 1
        items:
          type: array
          items:
            $ref: '#/components/schemas/TeamAtsRecord'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items
    
    TeamAtsRecord:
      type: object
      properties:
        wins:
          type: integer
          description: Number of wins against the spread
          example: 9
        losses:
          type: integer
          description: Number of losses against the spread
          example: 7
        pushes:
          type: integer
          description: Number of pushes (ties) against the spread
          example: 1
        type:
          $ref: '#/components/schemas/AtsRecordType'
      required:
        - wins
        - losses
        - pushes
        - type
    
    AtsRecordType:
      type: object
      properties:
        id:
          type: string
          description: ATS record type ID
          example: "0"
        name:
          type: string
          description: ATS record type name
          example: "atsOverall"
        description:
          type: string
          description: Description of the ATS record type
          example: "Overall team season record against the spread"
      required:
        - id
        - name
        - description
    
    ProvidersListResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of providers
          example: 71
        pageIndex:
          type: integer
          description: Current page index (1-based)
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 25
        pageCount:
          type: integer
          description: Total number of pages
          example: 3
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items
    
    ProviderDetails:
      type: object
      properties:
        $ref:
          type: string
          format: uri
          description: Reference URL for this provider
        id:
          type: string
          description: Provider ID
          example: "58"
        name:
          type: string
          description: Provider name
          example: "ESPN BET"
        priority:
          type: integer
          description: Provider priority/ranking
          example: 1
      required:
        - $ref
    
    HeadToHeadsListResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of head-to-head odds
          example: 0
        pageIndex:
          type: integer
          description: Current page index (0-based)
          example: 0
        pageSize:
          type: integer
          description: Number of items per page
          example: 25
        pageCount:
          type: integer
          description: Total number of pages
          example: 0
        items:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
          description: List of head-to-head odds references
      required:
        - count
        - pageIndex
        - pageSize
        - pageCount
        - items